[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ggplot2 extended",
    "section": "",
    "text": "Welcome\nThis is the website for my book ggplot2 extended. It is about extending the functionality of the ggplot2 (Wickham 2025) R package by Hadley Wickham. Many extension packages have come out since the release of ggplot2. This book is about how to use them to make the most out of the whole ggplot2 ecosystem. And which of the many extensions to use in the first place.\nI will go through the very basics of how ggplot2 works in 1  ggplot2. But this book does assume some basic understanding of R and ggplot2.\nIf you’re starting with R, R for Data Science (Wickham, Çetinkaya-Rundel, and Grolemund 2023) is a good first stop. The book even contains three chapters on visualizing data with ggplot2.\nWant to take a comprehensive look into ggplot2 and the grammar of graphics first? Check out Hadley’s book ggplot2: Elegant Graphics for Data Analysis (Wickham 2016). You can find the work-in-progress 3rd edition online.\nThis website is and will always be free, licensed under the CC BY-NC-ND 4.0 DEED license. Once I’ve finished writing the whole book, there will be a physical copy of the book available. Stay tuned!\nPlease note that ggplot2 extended uses a Contributor Code of Conduct. By contributing to this book, you agree to abide by its terms.\nThis book is written by Antti Rask.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#sec-index-acknowledgments",
    "href": "index.html#sec-index-acknowledgments",
    "title": "ggplot2 extended",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThis book was built with Quarto and is hosted on Netlify.\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. 2nd ed. Springer-Verlag New York.\n\n\n———. 2025. Ggplot2: Elegant Graphics for Data Analysis. https://ggplot2.tidyverse.org.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. 2nd ed. O’Reilly.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "preface.html",
    "href": "preface.html",
    "title": "Preface",
    "section": "",
    "text": "Landscape\n“The tidyverse is an opinionated collection of R packages designed for data science.” https://www.tidyverse.org/\nThis book is an opinionated compendium of R packages that extend ggplot2 (part of the tidyverse). It doesn’t try to be complete as the ecosystem is both wide and deep. The aim is to celebrate the great community that is creating fun and useful new ways to visualize data. And since we’re talking about data visualization, show what all is possible.\nThe book is about ggplot2 extension packages. But it has been important to me that I design the structure and contents concept(s) first, and package(s) second.\nLook at the figure. The amount of R packages depending1, importing2, or suggesting3 (Wickham and Bryan 2023) ggplot2 is increasing:\nAmong these thousands of packages are also hundreds of ggplot2 extensions. And these are the ones that are on CRAN (The Comprehensive R Archive Network). There are also packages on GitHub and similar platforms. Packages that no one have yet added to CRAN. Or those that have once been there, but CRAN has since archived for one reason or another.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "preface.html#sec-landscape",
    "href": "preface.html#sec-landscape",
    "title": "Preface",
    "section": "",
    "text": "ggplot2 dependencies between 2007-2024\n\n\n\n\n\n\nWickham, Hadley, and Jennifer Bryan. 2023. R Packages: Organize, Test, Document, and Share Your Code. 2nd ed. O’Reilly.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "preface.html#footnotes",
    "href": "preface.html#footnotes",
    "title": "Preface",
    "section": "",
    "text": "“Depends: Listing a package in […] Depends […] ensures that it’s installed when needed. […] A package you list in Depends will be attached when your package is attached.”↩︎\n“Imports: packages listed here must be present for your package to work. Any time your package is installed, those packages will also be installed, if not already present. devtools::load_all() also checks that all packages in Imports are installed.”↩︎\n“Suggests: your package can use these packages, but doesn’t require them. You might use suggested packages for example datasets, to run tests, build vignettes, or maybe there’s only one function that needs the package.”↩︎",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Purpose and scope\nData visualization is one of those things that can look easy when you see someone doing it well. Then you try it yourself and it’s easy to feel like you know nothing.\nI wanted to share the tools that make it easier to create those beautiful visualizations. And to show you how to use those tools together, not only with ggplot2 (Wickham et al. 2025) but with each other.\nOne bit about terminology before we go any further. Chart, diagram, graph, plot, and visualization are all terms that people have tried to give strict definitions to. But in reality, they get used more or less interchangeably. Is it a bar chart or a bar graph? Yes.\nIn the context of this book, I try to use the terms consistently in this way:\nA very basic reason why I started writing this book was the fact that one didn’t already exist. “Someone had to do it”, as they say.\nI know there is information out there about the different ggplot2 extension packages. There are the package documentation, but there are also some blogs around (see Further resources).\nBut that information is quite scattered. There were many great packages I hadn’t even heard about before I started doing research for the book.\nI’ve tried my best to test and write about the most useful among them. After all, there are hundreds of packages to choose from. And I don’t think everyone should have to go through them all. Don’t try this at home!",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-purpose-and-scope",
    "href": "introduction.html#sec-purpose-and-scope",
    "title": "Introduction",
    "section": "",
    "text": "What you will learn\nThis book continues from where ggplot2: Elegant Graphics for Data Analysis (Wickham 2016) left off. In his book, Hadley does mention some extension packages by name. But until now there hasn’t been a comprehensive guide to those extension packages. And how to use them together.\nBasics works as kind of a “Previously, on ggplot2…”. A reminder of the basic function(alitie)s of the core package.\nLayers goes through the layers that make up the grammar of graphics: Data, geometric objects (Geoms), statistical transformations (Stats), titles and labels (Annotations), color, position and size of visual elements (Scales and guides), Coordinate systems, small multiples (Facets), and Themes. They are in a logical order. As are the rest of the chapters. The same order that you would build your visualization in.\nSpecial cases hosts not-so-typical visualizations: Maps, networks, interactive plots, animated plots, and graphs integrated in tables.\nShortcuts contains different kinds of helpers and interactive tools. Designed to make it easier to create your visualizations.\nAt some point, we will be getting ready to publish our visualization. You’ll want to give them finishing touches, but it’s also good to know about arranging plots.\nAnd while ggplot2 is an R package, its impact and influence go beyond R. So we’ll talk about Python a bit.\nTo finish off, we go through some case studies. We build visualizations, step-by-step, from data to publication.\nWhat you won’t learn\nThese are some of the interesting topics that I had to leave out of the book. It’s long as it is and I decided to concentrate on the topics and extensions that everyone can use. Regardless of the field you’re in.\nCombining visualizations and BI tools\nUsing R in general and ggplot2 visualizations in specific within BI tools like Power BI is cool. Interested? You can start by reading Luca Zavarella’s book Extending Power BI with Python and R.\nGenerative art\nCreating art with R - color me impressed! It’s called Rtistry or aRt, because why not? There isn’t enough room in the book for a proper chapter on this, but here are some links to get you started on the topic:\n\nartpack by Meghan Harris\naRtsy by Koen Derks\nGenerative Art by Nicola Rennie\nLarge language models (LLM)\nI know, it would be trendy to write about AI. And I do think they can play a part in the data visualization process. But there isn’t anything that meaningful to write about. Whatever you do, whether you use AI or not, do trust your senses!\nA machine doesn’t need to visualize data to use it. So, in a way, data visualization is one of the last bastions of human-to-human communication. By humans, for humans, am I right?\nSpecialized packages in specialized fields like bioinformatics\nThis one should be self-evident. “Write what you know”. I know nothing about bioinformatics. I’m not even sure I understand what the term means.\nAre you interested in bioinformatics? I mean, I don’t want to leave you hanging. There is a website and a suite of packages called Bioconductor that should get you started!\nSports\nIt’s the same as with generative art. Interesting topic, but not enough space. Still, here’s another short list of packages related to sports:\nBaseball\n\nbaseballr by Saiem Gilani\nmlbplotR by Camden Kay\n\nFootball\n\nnflplotR by Sebastian Carl\n\nSoccer\n\nggshakeR by Abhishek Amol Mishra\nggsoccer by Ben Torvaney\nsoccerAnimate by Ismael Gómez Schmidt\n\nVarious\n\nsportyR by Ross Drucker",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-who-is-the-book-for",
    "href": "introduction.html#sec-who-is-the-book-for",
    "title": "Introduction",
    "section": "Who is the book for?",
    "text": "Who is the book for?\nI assume that you’re reading this because you’re interested in data visualization, R, or both.\nI already wrote about this in the Welcome section. This book is for people who already have a working knowledge of ggplot2 and the grammar of graphics. I’m quite adamant on that. You should learn the foundations first. And there are already excellent books and websites for that.\nOther than that, the tools and techniques in the book aren’t all that advanced (at least most of them). You don’t have to be a visualization wizard to find the book useful. Each of the chapters will contain code that you can use almost verbatim.\nIt doesn’t even matter if R isn’t your native language. You might find an inspiring R package and then go on and find a similar package in your preferred language. Or write that package, if one doesn’t already exist. It’s all good!",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-who-am-i-to-write-this-book",
    "href": "introduction.html#sec-who-am-i-to-write-this-book",
    "title": "Introduction",
    "section": "Who am I to write this book?",
    "text": "Who am I to write this book?\nHi! I’m Antti Rask, a data analyst if you had to choose one label. I’ve lived many lives and had many careers before finding my truest calling in data.\nI’ve liked data visualizations longer than I’ve been using R (which I started in late 2019/early 2020). I made my first visualizations with Excel. At some point, I switched to Power BI. Which is still my main tool for visualization at work.\nYou could say that I am an artistic type. Music has been the main avenue for my artistic self-expression for most of my life. But I’ve also liked to take photos of street art. I come across them on my adventures in Helsinki, or when I’m abroad.\nIn visualizing data I find myself leaning more towards the Stephen Few school of thought. Less is usually more and you should avoid chartjunk at all costs. Still, I’m not a purist, by any means.\nI’ve co-authored the RandomWalker (Sanderson and Rask 2025) R package with Steven Paul Sanderson II (@spsanderson). Specifically the function RandomWalker::visualize_walks(). It uses ggplot2 and some of the extensions found in this book.\nI also like to tinker with R Shiny and recently made an app called TuneTeller. It received an honorable mention in the 2024 Shiny Contest.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-r",
    "href": "introduction.html#sec-r",
    "title": "Introduction",
    "section": "R",
    "text": "R\nAll the code in this book is in R. Except for 19  Python. If you have never used R, R for Data Science (Wickham, Çetinkaya-Rundel, and Grolemund 2023) is a better place to start.\nDon’t have R yet? You can get the latest version from CRAN (the comprehensive R archive network): https://www.r-project.org/.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-ide",
    "href": "introduction.html#sec-ide",
    "title": "Introduction",
    "section": "IDE",
    "text": "IDE\nRStudio is my integrated development environment (IDE) of choice. It’s free and open-source. It’s the environment where you can try out the code you find in this book. And it’s also where I wrote this book.\nYou can download the latest version from the Posit website: https://posit.co/download/rstudio-desktop/. Posit is the company that develops RStudio and many R packages. Like the tidyverse (Wickham 2023b) (see ggplot2 & tidyverse).\nThere are other alternatives like VSCode, Positron, and JupyterLab. This book does operate under the assumption that you are using RStudio.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-packages",
    "href": "introduction.html#sec-packages",
    "title": "Introduction",
    "section": "Packages",
    "text": "Packages\nggplot2 & tidyverse\nThe tidyverse is a collection of R packages. ggplot2 is one of them. The others are dplyr, forcats, lubridate, purrr, readr, stringr, tibble, and tidyr.\nYou could install the packages you need one by one, but you might as well install the whole tidyverse:\n\ninstall.packages(\"tidyverse\")\n\nTo highlight each of the packages used, I’ve decided to load the individual packages in the code examples. If you want to, you can use the following:\nlibrary(tidyverse)\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nThe previous message mentions conflicted (Wickham 2023a). It’s not part of the core tidyverse, but it’s one of my favorite packages. And I do recommend loading it whenever you’re writing new code.\nIt checks for conflicting function names and forces you to choose the one you want to use. Either use case by use case (for example dplyr::filter()) or session-wide (for example conflicts_prefer(dplyr::filter())).\nTo install conflicted:\n\ninstall.packages(\"conflicted\")\n\nAll you need to do is load the package at the beginning of your script:\n\nlibrary(conflicted)\n\nIt will then let you know if a conflict emerges. One fewer reason to have your code act weird when running it.\nggplot2 extensions\nHere are the main characters of this book.\nSome of them you can install from CRAN:\n\ninstall.packages(\n  c(\n    \"colorspace\",\n    \"DataExplorer\",\n    \"ExPanDaR\",\n    \"GGally\",\n    \"ggcorrplot\",\n    \"ggHoriPlot\",\n    \"ggplot2movies\",\n    \"ggquickeda\",\n    \"ggrepel\",\n    \"ggstream\",\n    \"ggtext\",\n    \"ggthemes\",\n    \"gt\",\n    \"gtExtras\",\n    \"naniar\",\n    \"radiant\",\n    \"showtext\"\n  )\n)\n\nOthers you will have to install from GitHub:\n\n# For installing ggbraid\n# install.packages(\"remotes\")\nremotes::install_github(\"nsgrantham/ggbraid\")\n\n# For fully updating radiant\noptions(repos = c(RSM = \"https://radiant-rstats.github.io/minicran\", CRAN = \"https://cloud.r-project.org\"))\n# install.packages(\"remotes\")\nremotes::install_github(\"radiant-rstats/radiant.update\", upgrade = \"never\")\n\nOthers\nHere are the packages that are not part of the tidyverse. They aren’t considered to be ggplot2 extensions either. They are still useful for what we want to do and worth highlighting instead of hiding.\n\ninstall.packages(\n  c(\n    \"janitor\",\n    \"scales\"\n  )\n)",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-next-steps",
    "href": "introduction.html#sec-next-steps",
    "title": "Introduction",
    "section": "Next steps?",
    "text": "Next steps?\nIf you are reading these chapters in chronological order, the next step will be to read the rest of the book.\nOf course, I recommend you don’t only read the book. I’ve learned the most from reading these technical books when I’ve also gone through the code examples. Debugged them (of course I hope the code I provide isn’t broken…) when needed. Even translated them to another language (Python to R) or dialect (base R to tidyverse).\nNext, it’s practice, practice, practice. Recreate your favorite data visualizations using only ggplot2 and its extensions. Create something completely new. Either using your data (fitness, music, social media, etc.) or even something from 2  Data. There are also concepts like TidyTuesday (see Further resources).",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-further-resources",
    "href": "introduction.html#sec-further-resources",
    "title": "Introduction",
    "section": "Further resources",
    "text": "Further resources\nBlogs\n\nAlbert Rapp\nBruno Mioto\nCédric Scherer\nDominic Royé\nGeorgios Karamanis\nMatt Dancho\nNicola Rennie\nBooks\n\nBBC Visual and Data Journalism cookbook for R graphics\nBig Book of R (Chapter 12 Data Visualization) by Oscar Baruffa\nData visualisation using R, for researchers who don’t use R by Emily Nordmann et al.\nggplot2: Elegant Graphics for Data Analysis (3e) by Hadley Wickham et al.\nAn Introduction to ggplot2 by Ozancan Ozdemir\nModern Data Visualization with R by Robert Kabacoff\nR Gallery Book by Kyle W. Brown\nR Graphics Cookbook, 2nd edition by Winston Chang\nSolutions to ggplot2: Elegant Graphics for Data Analysis by Howard Baek\nThe Missing Book by Nicholas Tierney & Allison Horst\nGitHub Repos\n\nAwesome ggplot2 by Erik Gahner\nAwesome R Dataviz by Krzysztof Joachimiak\nggplot2 extenders by Gina Reynolds & Teun van den Brand\nggplot Tricks by Teun van den Brand\nTidyTuesday by Tom Mock\nWebsites\n\nPackages (ggplot2) by Antti Rask\nR for Artists and Designers by Arvind Venkatadri\nR for the Rest of Us by David Keys\nR Graph Gallery by Yan Holtz\nStatistics Globe by Joachim Schork\nYouTube - Channels\n\nAlbert Rapp\nStatistics Globe by Joachim Schork\nYouTube - Videos\n\nggplot2 extenders - Hadley Wickham: Thoughts on the ggplot2 extension ecosystem",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-introduction-acknowledgments",
    "href": "introduction.html#sec-introduction-acknowledgments",
    "title": "Introduction",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nEevamaija Virtanen, Juha Korpela, and Säde Haveri for founding Helsinki Data Week with me. For helping me dream big! And for making me realize a big project like this is possible when you keep making constant progress.\nMarc Eixarch (@Marceix) and Vicent Boned Riera (@eivicent) from the R User Group Finland. Learning R has been more fun thanks to your efforts in keeping the local R scene active in Helsinki, Finland.\nJoe Reis, Ole Olesen-Bagneux, and Vin Vashishta for your generosity and time. And for setting a positive example for someone like me to follow.\nHadley Wickham (@hadley) for all the books and packages. R for Data Science (Wickham, Çetinkaya-Rundel, and Grolemund 2023) got me started with R. ggplot2: Elegant Graphics for Data Analysis (Wickham 2016) helped me understand ggplot2 and the grammar of graphics on a deeper level.\nTo be continued…",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "introduction.html#sec-colophon",
    "href": "introduction.html#sec-colophon",
    "title": "Introduction",
    "section": "Colophon",
    "text": "Colophon\nThis book was written in RStudio using Quarto. The website is hosted with Netlify. And it’s automatically updated after every commit by Github Actions. The complete source is available from GitHub.\nThis version of the book was built with R version 4.5.1 (2025-06-13) and the following packages:\n\n  \n\n\n\n\n\nSanderson, Steven, and Antti Rask. 2025. RandomWalker: Generate Random Walks Compatible with the ’Tidyverse’. https://CRAN.R-project.org/package=RandomWalker.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. 2nd ed. Springer-Verlag New York.\n\n\n———. 2023a. Conflicted: An Alternative Conflict Resolution Strategy. https://conflicted.r-lib.org/.\n\n\n———. 2023b. Tidyverse: Easily Install and Load the ’Tidyverse’. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. 2nd ed. O’Reilly.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, Dewey Dunnington, and Teun van den Brand. 2025. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "ggplot2.html",
    "href": "ggplot2.html",
    "title": "1  ggplot2",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Basics",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>ggplot2</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Data sets\nThis book is about tools for creating visualizations. But to visualize data you first need data. So let’s start by taking a look at some of the data sets available to us without much hassle.",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#sec-data-sets",
    "href": "data.html#sec-data-sets",
    "title": "2  Data",
    "section": "",
    "text": "2.1.1 base R\nBase R comes with a bunch of data sets ready to use. There are classics like iris and mtcars, but there are many more to choose from.\n\n  \n\nSince the datasets package comes from base R, the data is not always immediately ready to use with ggplot2 (Wickham et al. 2025). Luckily we have the tidyverse (Wickham 2023) packages that make it easy to make the necessary changes.\nHere is an example using the WorldPhones (‘The World’s Telephones’) data set. We can start by loading the data set by using the data() function.\n\ndata(WorldPhones)\n\nLet’s take a quick look at what the first couple of rows of the data set looks like.\n\nhead(WorldPhones)\n\n     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer\n1951  45939  21574 2876   1815    1646     89      555\n1956  60423  29990 4708   2568    2366   1411      733\n1957  64721  32510 5230   2695    2526   1546      773\n1958  68484  35218 6662   2845    2691   1663      836\n1959  71799  37598 6856   3000    2868   1769      911\n1960  76036  40341 8220   3145    3054   1905     1008\n\n\nWorldPhones is a matrix with 7 rows and 8 columns. The columns give the figures for a given region, and the rows the figures for a year. We would like to turn it into a tidy format. We can use the tibble (Müller and Wickham 2025) package for the first part. And then we’ll use pivot_longer() from the tidyr package (Wickham, Vaughan, and Girlich 2024). It increases the number of rows and decrease the number of columns. We want the continents to be observations, not columns.\n\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(tidyr)\n\nworld_phones_tbl &lt;- WorldPhones %&gt;%\n  as.data.frame() %&gt;%\n  rownames_to_column(var = \"Year\") %&gt;%\n  as_tibble() %&gt;%\n  pivot_longer(\n    cols      = !Year,\n    names_to  = \"Continent\",\n    values_to = \"Phones\"\n  ) %&gt;% \n  mutate(across(where(is.character), as.factor))\n\n\n  \n\nWhat we’re left with is a tibble with three columns, Year, Continent, and Phones. We can then use the new tibble to create a simple graph with ggplot2.\nlibrary(ggplot2)\n\nworld_phones_tbl %&gt;%\n  ggplot(aes(Year, Phones, color = Continent, group = Continent)) +\n  geom_line() +\n  theme_bw()\n\n\n2.1.2 IMDb movies (1893-2005)\nggplot2movies (Wickham 2015) used to be a part of the ggplot2 package itself. It’s now its own package to make ggplot2 lighter.\nBut it’s a cool little package. It has Internet Movie Database (IMDb) data about movies from between 1893 and 2005. The selected movies have “a known length and had been rated by at least one [IMDb] user.” (Wickham 2015).\nThe Movies data set has qualities that make it good for our needs. Let’s start by loading it.\nlibrary(ggplot2movies)\n\ndata(movies)\nLet’s take a quick look at what some of the data looks like.\n\nhead(movies)\n\n\n  \n\nMovies is already a tibble. It consists of 58788 rows (observations) and 24 columns (variables).\nWhen starting to work with a new data set it’s always good to take a look at the documentation. To understand what is in those rows and columns (and what is not).\n\n  \n\nHere are some of the reasons why Movies is a good example data set because it includes:\n\nA goldilocks amount of data. Not too little, not too much\n\nCategorical data of both nominal (title, genre) and ordinal (mpaa) kind\n\nNumerical data of both continuous (budget, length, rating) and discrete (year, votes) kind\n\nWe can use two of those columns, year and rating to create a simple visualization with ggplot2.\nlibrary(ggplot2)\n\nmovies %&gt;%\n  ggplot(aes(year, rating)) +\n  geom_point(alpha = 0.05) +\n  theme_bw()\n\nAs mentioned earlier, Movies is already a tibble. But, it doesn’t mean that the data is in an optimal format for all kinds of visualization. But we’ll do all the necessary data wrangling within the chapter where we use the data.\n\n2.1.3 RDatasets\nRDatasets is not an R package. But it is an excellent GitHub repo. And a “collection of data sets originally distributed in various R packages” (Arel-Bundock 2024).\nHere listed are the 2337 data sets that were available on 2024-11-11.\n\n  \n\nThe RDatasets repo contains that same list. But there you will also find a .csv file and documentation for each data set.\nIf I had to choose one fun data set from the list to highlight, it would be starwars from the dplyr (Wickham et al. 2023) package.\nYou can choose to use the .csv file provided on the website. Another way to use the collection is to choose the data set from the list and load the package it comes with:\n\nlibrary(dplyr)\n\ndata(starwars)\n\nLet’s take a quick look at what some of the starwars data looks like.\n\nhead(starwars)\n\n\n  \n\nThere are a bunch of Star Wars characters and their stats.\nLet’s choose two columns, height and species (and filter for six of the more well-known species). We’ll use them to create a simple visualization with ggplot2.\nlibrary(ggplot2)\n\nstarwars %&gt;%\n  filter(species %in% c(\"Droid\", \"Ewok\", \"Gungan\", \"Human\", \"Hutt\", \"Wookiee\")) %&gt;%\n  ggplot(aes(height, species)) +\n  geom_boxplot() +\n  theme_bw()\n\nThis concludes the section about the different data sets available for every R user. Next, we’ll take a look at some of the ggplot2 extensions that make it easier to do exploratory data analysis (EDA).",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#sec-exploratory-data-analysis-eda",
    "href": "data.html#sec-exploratory-data-analysis-eda",
    "title": "2  Data",
    "section": "\n2.2 Exploratory data analysis (EDA)",
    "text": "2.2 Exploratory data analysis (EDA)\nExploratory data analysis (or EDA, which we’ll be using from now on) is a process, even if it is a loose one. The Cambridge Dictionary ((Ed.) 2013) defines process as “a series of actions that you take in order to achieve a result”. So, we a) have a series of actions and b) a result you wish to achieve.\nLet’s look at the results first. After all, that is why we do things. You might have other, more specific goals depending on your particular field or use case. But in the most general sense, the result we’re after is a better understanding of the data (set) we’re working on.\nWhat are the series of actions we need to take? As I mentioned earlier, EDA is a loose process. There are as many ways to go about it as there are analysts and data sets. Still, some common steps usually occur: looking at missing values, summarizing data, and visualizing relationships between variables.\nIt’s good to note these visualizations aren’t usually meant for publication. Compared to those you find later on in the book, these are more for your eyes than for the eventual audience.\nThe last thing we’ll look at in this chapter is one way to automate the EDA process using an app. Although I must warn you. It’s better to use these tools only after you’ve gained experience from doing EDA without them. It might sound counter-intuitive, but trust me. It can be too overwhelming if you don’t know what you’re doing.\n\n2.2.1 Missing values\nLet’s first load the data. Looking at the movies data set earlier we noticed the mpaa column had many blank values. We don’t know if they didn’t have a rating in the first place. Or if they did, but the rating is missing. For the sake of this demonstration, let’s assume they all should have a rating.\nWe’ll begin by turning all the blank values (of the character type) into NA (not available).\n\nlibrary(dplyr)\nlibrary(ggplot2movies)\n\nmovies_na &lt;- movies %&gt;%\n  mutate(\n    # Turn all blank values of the character type into NA\n    across(where(is.character), ~na_if(., \"\")), \n    # Create a decade column for grouping based on the values in the year column\n    decade = floor(year / 10) * 10\n  )\n\nNaniar (Tierney et al. 2024) is a package with many functions for visualizing missing (NA) values. It does contain many functions outside of visualization. But that’s for another book.\nOne simple function is gg_miss_var(). It creates a lollipop plot ([INSERT LINK HERE]). It shows which columns (variables) contain the greatest amount of missing (NA) values.\n\nlibrary(naniar)\n\nmovies_na %&gt;% \n  gg_miss_var() +\n  theme_bw()\n\n\n\n\n\n\n\nWe can see that MPAA ratings aren’t the only thing missing. Almost the same amount of films are missing the budget information. With budget, it’s easier to say that if we don’t have a number, it is missing. Then again, that column did have NAs in place from the beginning.\nWe’re also interested in seeing if there is overlapping missingness between the columns. It can indicate patterns in the data. We’ll use an upset plot ([INSERT LINK HERE]) for that. Just add gg_miss_upset().\n\nmovies_na %&gt;% \n  gg_miss_upset(\n    # Number of sets to look at. We know there are only two columns with NA\n    nsets = 2\n  )\n\n\n\n\n\n\n\nMore than 3000 movies without an MPAA rating and almost the same amount without a budget. But over 50000 without both. That makes me think there is a consistency in the missingness.\nWe can also use geom_miss_point() to see if there are more patterns between the missing variables. Let’s also use label_number() from the scales (Wickham, Pedersen, and Seidel 2023) package to prettify the x-axis labels.\n\nlibrary(ggplot2)\nlibrary(scales)\n\np1 &lt;- movies_na %&gt;%\n  ggplot(aes(budget, mpaa)) +\n  geom_point() +\n  geom_miss_point() +\n  scale_x_continuous(\n    labels = label_number(\n      scale  = 1e-6,\n      prefix = \"$\",\n      suffix = \"M\"\n    )\n  ) +\n  theme_bw()\n\n\nValues seem to be missing in all the MPAA rating categories. NC-17 does not seem to contain that many values in general, but many of them seem to be missing.\nLet’s confirm this observation by creating a frequency table with the tabyl() function. It’s from a neat package called janitor (Firke 2024).\nlibrary(dplyr)\nlibrary(janitor)\n\nmovies_na %&gt;% \n  filter(mpaa == \"NC-17\") %&gt;% \n  tabyl(mpaa, budget) %&gt;%\n  paged_table()\n\n  \n\nSo, there are more NC-17 movies that are missing the budget than those that aren’t.\nWe can dig even deeper. We can use facet_wrap() from ggplot2 to see how the missing values are distributed throughout the history.\np1 +\n  scale_x_continuous(\n    n.breaks = 3,\n    labels   = label_number(\n      scale  = 1e-6,\n      prefix = \"$\",\n      suffix = \"M\"\n    )\n  ) +\n  facet_wrap(vars(decade))\n\nBefore moving on, let’s first look at one alternative for visualizing missing values, plot_missing(). It comes from the DataExplorer (Cui 2024) package.\nlibrary(DataExplorer)\n\nmovies_na %&gt;%\n  plot_missing(\n    # Let's only visualize the missing values\n    missing_only = TRUE,\n    # We'll use theme_bw() when possible\n    ggtheme      = theme_bw()\n  )\n\nYou see the amount and percentage of NAs per column, arranged in order of missingness. This is a great quick overview!\nDataExplorer, like naniar earlier, provides functions for handling the missing values. For instance, we could drop the budget and mpaa columns, as indicated by the red color in the plot above.\n\n2.2.2 Summarizing data\nOf course, we want to visualize more than the missing data. It makes sense to start with an overview of some kind.\nLuckily we don’t have to go further than the DataExplorer package. You know, the one we already tried in the previous chapter.\nWe’ll start with the plot_intro() function. It gives us some basic information about our data set, visualized.\nlibrary(DataExplorer)\nlibrary(dplyr)\n\nmovies_na %&gt;%\n  plot_intro(ggtheme = theme_bw())\n\n\n2.2.2.1 Missing Values\nThe most fascinating insights here are still related to missing values. Less than 5% of the rows in the data set are complete. Meaning that they have no missing values in any of the columns. And almost 10% of all the observations are missing. That’s how much the missing rows of budget and mpaa are affecting the totals. One positive thing is that we don’t have any columns that are missing all the values.\n\n2.2.2.2 Categorical Columns\nLet’s then take a look at the categorical columns. The one that will be missing from the upcoming visualizations is title. The values are more or less unique. So, it wouldn’t make sense having a bar chart, for instance, with more than 50000 rows with a count of 1 each.\nDid someone mention bar charts? Let’s start with the plot_bar() function to visualize the categorical columns. This will show us what the frequency of each of the values are within a column.\nmovies_na %&gt;% \n  plot_bar(ggtheme = theme_bw())\n\nWe see mpaa with it’s missing values. The rest of the categorical columns are binary ones about which genres each movie belongs to. Comedy and Drama seem to be the best represented ones in the data set.\nWith the with argument we can choose to show something else on the x-axis besides the frequency. Here, for instance, we’ve chosen length to be the column to sum up.\nmovies_na %&gt;% \n  plot_bar(\n    # Name of continuous feature to be summed instead of NULL (i.e. frequency)\n    with    = \"length\",\n    ggtheme = theme_bw()\n  )\n\nHere we can see that Animation and Short make up an even smaller part of the whole as before. Which makes sense, when you start to think about it.\nAnother useful feature is using the by argument. It means we will see the frequency broken down by a discrete feature. In this case we’ve chosen mpaa.\nmovies_na %&gt;% \n  plot_bar(\n    by      = \"mpaa\",\n    ggtheme = theme_bw()\n  )\n\nThis shows us that Action and Romance are the genres with more R rated movies than the other genres. Of course we must remember the prevalence of those missing values.\n\n2.2.2.3 Numerical Columns\nNext, we’ll use plot_histogram() to draw a histogram of all the numerical columns (both discrete and continuous).\nmovies_na %&gt;%\n  plot_histogram(ggtheme = theme_bw())\n\nThat’s a lot of information to take in all at once. For the next visualizations, we’ll reduce the number of columns to look at.\nr1 to r10 gives the percentile of users who rated the movie that number. Interesting information in its own right. But we’ll concentrate on budget, length, rating, votes, and year. At least for the rest of this chapter.\nThere is one more thing we notice when looking at the histogram for length. Most of the values seem to be close to zero. But there are some extreme values around even 5000 that are skewing the view. Let’s see what the cause is by looking at the title and length of the ten longest movies in the data set.\n\nmovies_na %&gt;%\n  select(title, length) %&gt;%\n  slice_max(length, n = 10) %&gt;%\n  paged_table()\n\n\n  \n\n\n\nSo, a couple of cult classics. The Cure for Insomnia (5220 minutes) and The Longest Most Meaningless Movie in the World (2880 minutes) are in a category of their own. They are legit long films and not a mistake. Let’s still create a new tibble that includes only those movies that have a length of under 500 minutes.\nAlso, we’ll select the columns mentioned earlier. Budget, length, rating, votes, and year.\nmovies_na_length_under_500 &lt;- movies_na %&gt;%\n  select(budget, length, rating, votes, year) %&gt;%\n  filter(length &lt; 500)\nLet’s see how the four columns, length, rating, votes, and year look like as a box plot when grouped by budget. Budget is a continuous variable. That’s why plot_boxplot() groups the values to 5 equal ranges.\nmovies_na_length_under_500 %&gt;%\n  plot_boxplot(\n    by      = \"budget\",\n    ggtheme = theme_bw(),\n    ncol    = 4\n  )\n\nBased on the box plot, the movies with a bigger budget tend to:\n\nhave ratings inside a narrower range\nhave better ratings\nhave more votes\nbe more recent\nbe longer\n\nLet’s then take a look at what this all looks like as a scatter plot. We’ll use all the same columns. It’s important to use an alpha value that is low enough to reveal a more nuanced picture than we would see if it was 1.\nmovies_na_length_under_500 %&gt;%\n  plot_scatterplot(\n    by              = \"budget\",\n    geom_point_args = list(alpha = 0.05),\n    ggtheme         = theme_bw(),\n    ncol            = 2\n  )\n\nThese are some of the ways to use DataExplorer to create a visual summary of a data set. I encourage you to dig into the documentation and see what else there is.\nTo conclude, DataExplorer has a function, create_report(). It creates a full EDA report from scratch. We won’t use that now, because the report would take too much space. But if you’re using DataExplorer, you should try it!\n\n2.2.2.4 gt & gtExtras\nDataExplorer is a good package, but it’s not the only game in town for EDA. gt (Iannone et al. 2025) is a package to create tables ([INSERT LINK HERE]) with.\nOften, when you think about tables, you think about numeric and text values. But that doesn’t have to be the case. With gtExtras (Mock 2025) you can create a fast and easy visual summary of your data. The gt_plt_summary() function is all you need.\nThe function does have some limitations. It has had some issues with certain data sets. The movies data set didn’t work, for instance. That’s why we’ll take a look at the WorldPhones data set instead.\nlibrary(gt)\nlibrary(gtExtras)\n\nworld_phones_tbl %&gt;%\n  gt_plt_summary()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\n\n\n49 rows x 3 cols\n\n\n\nColumn\nPlot Overview\nMissing\nMean\nMedian\nSD\n\n\n\n\n\n\n\nYear\n\n1951, 1956, 1957, 1958, 1959, 1960 and 1961\n\n\n7 categories\n0.0%\n—\n—\n—\n\n\n\n\n\nContinent\n\nAfrica, Asia, Europe, Mid.Amer, N.Amer, Oceania and S.Amer\n\n\n7 categories\n0.0%\n—\n—\n—\n\n\n\nPhones\n89 auto80 kauto\n0.0%\n16,434.8\n3,000.0\n24,026.3\n\n\n\n\nWhat we get is a table that combines a visualized plot overview with basic summary elements: missing, mean, median, and standard deviation (sd)). You can also see from the icon on the left, whether the column is categorical or continuous. With the categorical columns, you can see a list of the categorical values by clicking the arrow.\n\n2.2.3 Visualizing relationships\nMost of the summarization techniques we’ve used so far have dealt with the distribution of values within one variable. But it’s also important to understand the possible relationships between different variables.\nUnderstanding those relationships can provide insights into patterns, trends, and dependencies.\nTwo tools are available for this. A correlation matrix quantifies the relationships numerically. But since this book is about visualizing data, we’ll also visualize those numbers.\nA pairwise plot matrix is a complementary visual tool to explore those relationships more deeply.\n\n2.2.3.1 Correlation matrix\nFirst, let’s tweak the data set to better fit our demo purposes. We’ll select the columns we wish to use. In this case, it’s all the columns with numeric values. Except for the ones about the ratings percentiles (r1-r10). And we’ll use drop_na() from tidyr to drop rows where any column has missing values.\nlibrary(dplyr)\nlibrary(tidyr)\n\nmovies_without_na_numeric &lt;- movies_na %&gt;%\n  select(where(is.numeric) & !num_range(\"r\", 1:10)) %&gt;%\n  # The second select() is to order the columns alphabetically.\n  # Except for the names of genres that follow everything else.\n  select(budget, length, rating, votes, year, everything()) %&gt;%\n  drop_na()\nmovies_without_na_numeric %&gt;%\n  paged_table()\n\n  \n\nWe’re left with 5215 rows (observations) and 13 columns (variables). Still plenty enough to perceive exciting correlations between the columns.\nLet’s first create a correlation matrix using the cor() function. It’s from base R and computes the correlation between the different columns. We’re using the Pearson correlation coefficient as the method (default). Remember it can’t determine a potential non-linear association between variables.\nDue to the lack of space on the page, we’ll only look at these columns: budget, length, rating, votes, and year. If there was more room, we’d include the genre columns. But we’ll see them again soon enough!\ncorr &lt;- movies_without_na_numeric %&gt;% \n  cor() %&gt;%\n  round(2)\ncorr %&gt;%\n  as.data.frame() %&gt;%\n  select(budget, length, rating, votes, year) %&gt;%\n  # We're using slice_head to filter only the first n rows. 5 in this case.\n  # Without it, we would also have rows with the genres, ruining our matrix.\n  slice_head(n = 5) %&gt;%\n  paged_table()\n\n  \n\nOf course, we can see the differences by looking at the values in the matrix. But it might be easier to get the bigger picture by looking at them graphically. For that, we’ll use ggcorrplot (Kassambara 2023).\nThis time, we’ll also include the genre columns. We’re interested in how they correlate with each other and the original five.\nIn its basic form ggcorrplot() only needs the data argument. So let’s first look at it without any modifications.\nlibrary(ggcorrplot)\n\ncorr %&gt;%\n  ggcorrplot()\n\nSo, the way to interpret this is simple. The redder the square, the stronger the positive correlation between the two variables. Votes and budget, for instance. Which makes intuitive sense. The bigger the movie (budget), the more likely it is to garner attention from IMDb users. If we look at budget and rating, there is no discernible correlation between the two. This is an intriguing initial finding and we could investigate it further.\nBut, the bluer the square, the stronger negative correlation there seems to be between the two. The most obvious example here is the negative correlation between length and Short. Who would have guessed that the films in the Short genre would also be short in length? We can also see a negative correlation between the Short genre and budget. Which again makes perfect sense. You can also see the reverse effect when looking at budget and length. It strengthens the case further.\nWe’re still in the territory where most visualizations are for your eyes only. But there are some modifications we could make to the plot. Here are the parameters for ggcorrplot() we’re using (and why):\n\n\nCircle is the other method available. The bigger the shape, the bigger the correlation (negative or positive). Double encoding (also known as redundant encoding) is a two-edged sword. We should use it with caution. But here it can help distinguish the most noteworthy cases\nWe can use one of the ggplot2 themes by using ggtheme. Using a clean theme like theme_bw makes the plot a bit easier to read\nAll variables are perfectly correlated with themselves. It doesn’t make sense to show the diagonal. If anything, it makes reading the plot a bit harder. We can get rid of the diagonal by setting show.diag as FALSE\n\nBlue, white, and red are all fine colors. For a little more flavor, we can choose something else. Like dark turquoise, grey, and dark orange\n\n\ncorr %&gt;% \n  ggcorrplot(\n    method    = \"circle\",\n    ggtheme   = theme_bw,\n    show.diag = FALSE,\n    colors    = c(\"darkturquoise\", \"grey95\", \"darkorange3\")\n  )\n\nMuch better! And here are some more genre-related insights based on the matrix:\n\nDrama has a fairly strong positive correlation with both length and rating\nAction films have the strongest positive correlation with budget\nComedy and Romance have a positive correlation\nBut so does Romance and Drama\n\n2.2.3.2 Pairwise plot matrix\nWe already got a lot of information out of the correlation matrix. But as mentioned earlier, a pairwise plot matrix is a tool to explore the relationships within and between variables more deeply.\nAgain, we begin by fine tuning the data set. In this case we’re only interested in the Drama genre and how those films compare to the rest of the films.\nmovies_without_na_drama &lt;- movies_na %&gt;%\n  mutate(\n    Drama = if_else(Drama == 1, \"Yes\", \"No\") %&gt;%\n      as.factor()\n  ) %&gt;% \n  drop_na() %&gt;%\n  select(budget, length, rating, votes, year, Drama)\nmovies_without_na_drama %&gt;% \n  paged_table()\n\n  \n\nTo use a pairwise plot matrix we turn to GGally (Schloerke et al. 2024).\nLet’s start with the basic ggpairs() function. We only need to tell it which columns we want to use. We’ll start by looking at the data set without the Drama column.\nlibrary(GGally)\n\nmovies_without_na_drama %&gt;%\n  ggpairs(\n    columns = c(\"budget\", \"length\", \"rating\", \"votes\", \"year\")\n  ) +\n  theme_bw()\n\nThe matrix consists of three areas: upper, lower, and diagonal (or diag when it comes to function parameters). They can contain different types of plots and are customizable. But let’s first look at the defaults:\n\nUpper contains the correlation coefficient between the two variables\nLower contains a scatter plot of the two variables\nDiagonal contains a density plot of the variable in question\n\nIt’s time to add Drama as color for the matrix. And also do some customizations:\n\nWe know Drama is either “No” or “Yes”, so let’s pick two colors that go well together, dark orange and dark turquoise\n\nWe can use functions to customize any part of the matrix\n\n\nlower_function() creates a scatter plot where the points are somewhat transparent (alpha = 0.5). There is also a red linear trend line\n\ndiag_function() creates a density plot. But why do we need to do that when the default already does the same? For some reason, default uses default colors, even if we map the colors as we have. But our function here does the trick\n\n\nThen we simply create the matrix\n\nlibrary(ggplot2)\n\n# 1) Choose your colors\nmanual_colors = c(\"darkorange3\",\"darkturquoise\")\n\n# 2) Create functions for the lower half and the diagonal of the matrix\nlower_function &lt;- function(data, mapping) {\n  ggplot(data = data, mapping = mapping) +\n    geom_point(alpha = 0.5) +\n    geom_smooth(method = \"lm\", color = \"red\")\n}\n\ndiag_function &lt;- function(data, mapping) {\n  ggplot(data = data, mapping = mapping) +\n    geom_density()\n}\n\n# 3) Add colors. Then customize upper and lower half, and the diagonal\n# of the matrix. Lower and diagonal use the functions we created in step 2\nmovies_without_na_drama %&gt;%\n  ggpairs(\n    mapping = aes(color = Drama),\n    columns = c(\"budget\", \"length\", \"rating\", \"votes\", \"year\"),\n    upper   = list(continuous = wrap(\"cor\", size = 3.5)),\n    lower   = list(continuous = lower_function),\n    diag    = list(continuous = diag_function)\n  ) +\n  scale_color_manual(values = manual_colors) +\n  theme_bw()\n\nThere are many differences throughout the data depending on whether the movie belongs to the Drama genre.\nIf you want to, you can do the same with other genres!\nThere are many other ways to customize a pairwise plot matrix. For the rest, see ggpairs() documentation.\n\n2.2.4 Automated EDA app\nRemember how I warned you about automating the EDA process using an app? We’ve spent some time learning how to perform EDA manually. Now is the time to explore some of the available automation tools: ExPanDaR (Gassen 2020), ggquickeda (Mouksassi et al. 2024), and radiant (Nijs 2024).\nLet’s start with the similarities:\n\nUse shiny (Chang et al. 2024) to provide interactive web-based interfaces.\nCut the coding required. In most cases, you load your data and call a single function to start the app.\nEnable interactive exploration. As you adjust inputs in the UI (select variables, filters, plot types, etc.), the output updates immediately in your browser.\nSupport exporting your results in some form.\n\nThey differ in the scope of analysis and the amount of available features. This also affects the composition of their respective target audiences. Let’s take a closer look at each of them.\nWe’ll once again use movies_na_length_under_500 as the data set.\n\n2.2.4.1 ExPanDaR\nExPanDaR is especially good for panel data (with both cross-sectional and time-series dimensions). You can examine summary statistics, visualize distributions, and relationships. You can also perform linear regression analysis. ExPanDaR even allows for simple experimental tests to verify robustness. Splitting data into training and test samples, for example.\nA key feature is the ability to share analyses without revealing the raw data. This enables researchers to assess the robustness of empirical results within the app. Or to export an R Notebook of the analysis for reproducibility.\nFor these reasons, ExPanDaR’s target users are academic researchers.\nTo start the ExPanD Shiny app:\n\nlibrary(ExPanDaR) \n\nmovies_na_length_under_500 %&gt;%\n  ExPanD()\n\nHere’s an example screenshot of the Scatter Plot section of the app. You choose the variables with the dropdown menus. There can be extra choices to make. In this case, whether to use a smaller sample and display a smoother as seen in Section 2.2.3.2.\n\n\nFigure 2.1: A similar scatter plot to the one we created with DataExplorer in Section 2.2.2.3\n\nFor a full working example of the app in action, visit Exploring the Accrual Landscape by Open Science.\n\n2.2.4.2 ggquickeda\nggquickeda enables a rapid exploration of your dataset by generating a range of plots (e.g., scatter plots, box plots, bar charts, histograms, and density plots) and summary tables.\nThe app also generates descriptive statistics tables for one or many variables. A notable feature is support for visualizing survival analysis. ggquickeda includes custom geoms and stats (e.g., geom_km) to plot Kaplan-Meier survival curves and confidence bands. This makes it especially handy for clinical or time-to-event data.\nThe target audience for ggquickeda is analysts and R users who want rapid insight into their data through visualization, but prefer a graphical user interface (GUI) approach. ggquickeda includes an Export Plot Code feature that reveals the underlying ggplot2 code for any graph you create. This makes it easy to customize the plots further outside the app.\n\nlibrary(ggquickeda)\n\nmovies_na_length_under_500 %&gt;%\n  run_ggquickeda()\n\nHere’s an example screenshot of the X/Y Plot section of the app. There are more choices to make compared to ExPanDaR.\n\n\nFigure 2.2: Another similar scatter plot to the one we created with DataExplorer in Section 2.2.2.3\n\nFor a more comprehensive introduction to the features, there’s an hour-long webinar from Certara R School.\n\n2.2.4.3 radiant\nRadiant isn’t only an EDA tool but a comprehensive Shiny application that covers the entire analytics workflow. From data import and cleaning to exploration, modeling, and even decision-making. For the scope of this book, we’ll concentrate on the EDA part.\nRadiant combines several modular packages (radiant.data, radiant.design, radiant.basics, radiant.model, radiant.multivariate) into one unified app.\nRadiant is for business analysts, students, and instructors in business and statistics. It’s used in classrooms, allowing learners to focus on concepts rather than syntax.\nRadiant can generate an R Markdown report of all your analysis steps or let you save the state of the app. The state file is a snapshot of all inputs and selections, which you or others can reload later to reproduce the exact results.\n\nlibrary(radiant)\n\n# Note that you can't provide radiant with the data set in the code. \n# We'll do it in the user interface instead.\nradiant()\n\nSince we can’t provide radiant with the data set in the code, we’ll do it inside the GUI:\n\n\nFigure 2.3: You can load data from any data frame in your Global Environment\n\nHere’s an example screenshot of the Visualize section of the app. The app design is closer to ggquickeda than ExPanDaR.\n\n\nFigure 2.4: Yet another similar scatter plot to the one we created with DataExplorer in Section 2.2.2.3\n\nFor a more comprehensive introduction to the features, check the Radiant Tutorial Video Series.\n\n2.2.4.4 Comparative summary\nIn conclusion, each package excels in a different niche. They all leverage the power of R through an interactive interface, so the best choice depends on the use case. Choose the one whose design philosophy matches your analysis needs.\n\n\n\n\n\n\n\n\nPackage\nFocus & Scope\nUnique Strengths\nIdeal Use Cases\n\n\n\nExPanDaR\nParticularly for panel data (longitudinal data sets)\nRobust modeling features, reproducible reports\nAcademic research, teaching, panel data analysis\n\n\nggquickeda\nQuick visualization and summary statistics\nQuick plots, Kaplan-Meier survival curves\nQuick EDA, initial data inspections, simple visualization\n\n\nradiant\nComprehensive business analytics platform\nBroad analytics toolkit, decision analysis\nBusiness analytics, education, end-to-end analysis workflow\n\n\n\n\n\n\n\nArel-Bundock, Vincent. 2024. Rdatasets: A Collection of Datasets Originally Distributed in Various r Packages. https://vincentarelbundock.github.io/Rdatasets/.\n\n\nChang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke, Yihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, and Barbara Borges. 2024. Shiny: Web Application Framework for r. https://shiny.posit.co/.\n\n\nCui, Boxuan. 2024. DataExplorer: Automate Data Exploration and Treatment. http://boxuancui.github.io/DataExplorer/.\n\n\n(Ed.), Colin McIntosh. 2013. Cambridge Advanced Learner’s Dictionary. 4th ed. Cambridge University Press.\n\n\nFirke, Sam. 2024. Janitor: Simple Tools for Examining and Cleaning Dirty Data. https://github.com/sfirke/janitor.\n\n\nGassen, Joachim. 2020. ExPanDaR: Explore Your Data Interactively. https://joachim-gassen.github.io/ExPanDaR/.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, Alexandra Lauer, JooYoung Seo, Ken Brevoort, and Olivier Roy. 2025. Gt: Easily Create Presentation-Ready Display Tables. https://gt.rstudio.com.\n\n\nKassambara, Alboukadel. 2023. Ggcorrplot: Visualization of a Correlation Matrix Using ’Ggplot2’. http://www.sthda.com/english/wiki/ggcorrplot-visualization-of-a-correlation-matrix-using-ggplot2.\n\n\nMock, Thomas. 2025. gtExtras: Extending ’Gt’ for Beautiful HTML Tables. https://CRAN.R-project.org/package=gtExtras.\n\n\nMouksassi, Samer, Dean Attali, James Craig, Benjamin Rich, and Michael Sachs. 2024. Ggquickeda: Quickly Explore Your Data Using ’Ggplot2’ and ’Table1’ Summary Tables. https://CRAN.R-project.org/package=ggquickeda.\n\n\nMüller, Kirill, and Hadley Wickham. 2025. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nNijs, Vincent. 2024. Radiant: Business Analytics Using r and Shiny. https://CRAN.R-project.org/package=radiant.\n\n\nSchloerke, Barret, Di Cook, Joseph Larmarange, Francois Briatte, Moritz Marbach, Edwin Thoen, Amos Elberg, and Jason Crowley. 2024. GGally: Extension to ’Ggplot2’. https://ggobi.github.io/ggally/.\n\n\nTierney, Nicholas, Di Cook, Miles McBain, and Colin Fay. 2024. Naniar: Data Structures, Summaries, and Visualisations for Missing Data. https://naniar.njtierney.com/.\n\n\nWickham, Hadley. 2015. Ggplot2movies: Movies Data. https://CRAN.R-project.org/package=ggplot2movies.\n\n\n———. 2023. Tidyverse: Easily Install and Load the ’Tidyverse’. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, Dewey Dunnington, and Teun van den Brand. 2025. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis Vaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://dplyr.tidyverse.org.\n\n\nWickham, Hadley, Thomas Lin Pedersen, and Dana Seidel. 2023. Scales: Scale Functions for Visualization. https://scales.r-lib.org.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2024. Tidyr: Tidy Messy Data. https://tidyr.tidyverse.org.",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "geoms.html",
    "href": "geoms.html",
    "title": "3  Geoms",
    "section": "",
    "text": "3.1 Area charts\nA geom (short for geometric object) is a component that defines how data is visually represented in a plot. Geoms determine the type of visualization or the graphical shape that will be drawn.\n“These geoms are the fundamental building blocks of ggplot2 (Wickham et al. 2025). They are useful in their own right, but are also used to construct more complex geoms. Most of these geoms are associated with a named [chart]: when that geom is used by itself in a [chart], that [chart] has a special name.” (Wickham 2016)\nggplot2 already has a long list of geoms. We won’t be discussing those unless there is an extension package that is an improvement to the original. Primarily, this chapter focuses on the geoms that ggplot2 does not include.\nArea charts are based on line charts. The area between the x-axis and each line (or the area between lines) is shaded to help highlight the volume of the data.\nIn this chapter, we’ll take a look at the horizon chart, an improved version of the ribbon chart, and the streamgraph. They are all different takes on the area chart.",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#area-plots",
    "href": "geoms.html#area-plots",
    "title": "3  Geoms",
    "section": "",
    "text": "3.1.1 Horizon chart\n\n3.1.2 Ribbon plot (improved)\n\n3.1.3 Streamgraph",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#bar-charts",
    "href": "geoms.html#bar-charts",
    "title": "3  Geoms",
    "section": "\n3.2 Bar charts",
    "text": "3.2 Bar charts\n\n3.2.1 Likert plot\n\n3.2.2 Mosaic plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#density-plots",
    "href": "geoms.html#density-plots",
    "title": "3  Geoms",
    "section": "\n3.3 Density plots",
    "text": "3.3 Density plots\n\n3.3.1 Raincloud plot\n\n3.3.2 Ridgeline plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#geometric-shapes",
    "href": "geoms.html#geometric-shapes",
    "title": "3  Geoms",
    "section": "\n3.4 Geometric shapes",
    "text": "3.4 Geometric shapes\n\n3.4.1 Arc\n\n3.4.2 B-spline curve\n\n3.4.3 Bézier curve\n\n3.4.4 Circle\n\n3.4.5 Ellipse",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#heatmaps",
    "href": "geoms.html#heatmaps",
    "title": "3  Geoms",
    "section": "\n3.5 Heatmaps",
    "text": "3.5 Heatmaps\n\n3.5.1 Calendar heatmap",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#intersection-plots",
    "href": "geoms.html#intersection-plots",
    "title": "3  Geoms",
    "section": "\n3.6 Intersection plots",
    "text": "3.6 Intersection plots\n\n3.6.1 Upset plot\n\n3.6.2 Venn diagram",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#line-charts",
    "href": "geoms.html#line-charts",
    "title": "3  Geoms",
    "section": "\n3.7 Line charts",
    "text": "3.7 Line charts\n\n3.7.1 Bump chart\n\n3.7.2 Dumbbell and lollipop plot\n\n3.7.3 Line chart with neon glow or shadow effects\n\n3.7.4 Slope chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#multivariate-graphs",
    "href": "geoms.html#multivariate-graphs",
    "title": "3  Geoms",
    "section": "\n3.8 Multivariate graphs",
    "text": "3.8 Multivariate graphs\n\n3.8.1 Parallel coordinates plot (improved)\n\n3.8.2 Radar chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#pie-charts",
    "href": "geoms.html#pie-charts",
    "title": "3  Geoms",
    "section": "\n3.9 Pie charts",
    "text": "3.9 Pie charts\n\n3.9.1 Pie chart (improved)\n\n3.9.2 Moon chart\n\n3.9.3 Square chart / waffle chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#scatter-plots",
    "href": "geoms.html#scatter-plots",
    "title": "3  Geoms",
    "section": "\n3.10 Scatter plots",
    "text": "3.10 Scatter plots\n\n3.10.1 Beeswarm plot\n\n3.10.2 Point density plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#text-visualization",
    "href": "geoms.html#text-visualization",
    "title": "3  Geoms",
    "section": "\n3.11 Text visualization",
    "text": "3.11 Text visualization\n\n3.11.1 Page layout visualization\n\n3.11.2 Word cloud",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#tree-based-graphs",
    "href": "geoms.html#tree-based-graphs",
    "title": "3  Geoms",
    "section": "\n3.12 Tree-based graphs",
    "text": "3.12 Tree-based graphs\n\n3.12.1 Dendrogram\n\n3.12.2 Treemap\n\n3.12.3 Voronoi diagram\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. 2nd ed. Springer-Verlag New York.\n\n\n———. 2025. Ggplot2: Elegant Graphics for Data Analysis. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "stats.html",
    "href": "stats.html",
    "title": "4  Stats",
    "section": "",
    "text": "4.1 Combining data visualization and statistical modeling",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#convex-hull",
    "href": "stats.html#convex-hull",
    "title": "4  Stats",
    "section": "\n4.2 Convex hull",
    "text": "4.2 Convex hull",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#inferential-statistical-tests",
    "href": "stats.html#inferential-statistical-tests",
    "title": "4  Stats",
    "section": "\n4.3 Inferential statistical tests",
    "text": "4.3 Inferential statistical tests\n\n4.3.1 F-test\n\n4.3.2 Pearson’s Chi-squared test\n\n4.3.3 Test for association between paired samples\n\n4.3.4 Test of equal or given proportions\n\n4.3.5 T-test",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#interaction-plot",
    "href": "stats.html#interaction-plot",
    "title": "4  Stats",
    "section": "\n4.4 Interaction plot",
    "text": "4.4 Interaction plot\n\n4.4.1 CGPfunctions",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#linear-regression",
    "href": "stats.html#linear-regression",
    "title": "4  Stats",
    "section": "\n4.5 Linear regression",
    "text": "4.5 Linear regression\n\n4.5.1 Diagnostic plots\n\n4.5.2 Regression line equation and R-square",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#lorenz-curve",
    "href": "stats.html#lorenz-curve",
    "title": "4  Stats",
    "section": "\n4.6 Lorenz Curve",
    "text": "4.6 Lorenz Curve",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#markov-chain-monte-carlo",
    "href": "stats.html#markov-chain-monte-carlo",
    "title": "4  Stats",
    "section": "\n4.7 Markov chain Monte Carlo",
    "text": "4.7 Markov chain Monte Carlo",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#multi-stat-binning-layer",
    "href": "stats.html#multi-stat-binning-layer",
    "title": "4  Stats",
    "section": "\n4.8 Multi-stat binning layer",
    "text": "4.8 Multi-stat binning layer",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#overlay-normal-density-plot",
    "href": "stats.html#overlay-normal-density-plot",
    "title": "4  Stats",
    "section": "\n4.9 Overlay normal density plot",
    "text": "4.9 Overlay normal density plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#p-values",
    "href": "stats.html#p-values",
    "title": "4  Stats",
    "section": "\n4.10 P-values",
    "text": "4.10 P-values",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#p-p-plot",
    "href": "stats.html#p-p-plot",
    "title": "4  Stats",
    "section": "\n4.11 P-P plot",
    "text": "4.11 P-P plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#q-q-plot",
    "href": "stats.html#q-q-plot",
    "title": "4  Stats",
    "section": "\n4.12 Q-Q plot",
    "text": "4.12 Q-Q plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#quality-control-chart",
    "href": "stats.html#quality-control-chart",
    "title": "4  Stats",
    "section": "\n4.13 Quality control chart",
    "text": "4.13 Quality control chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#proportions-according-to-custom-denominator",
    "href": "stats.html#proportions-according-to-custom-denominator",
    "title": "4  Stats",
    "section": "\n4.14 Proportions according to custom denominator",
    "text": "4.14 Proportions according to custom denominator",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#random-rorests",
    "href": "stats.html#random-rorests",
    "title": "4  Stats",
    "section": "\n4.15 Random rorests",
    "text": "4.15 Random rorests",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#roc-curves",
    "href": "stats.html#roc-curves",
    "title": "4  Stats",
    "section": "\n4.16 ROC curves",
    "text": "4.16 ROC curves",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#sample-data-and-distribution-vectors",
    "href": "stats.html#sample-data-and-distribution-vectors",
    "title": "4  Stats",
    "section": "\n4.17 Sample data and distribution vectors",
    "text": "4.17 Sample data and distribution vectors",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#seasonal-adjustment",
    "href": "stats.html#seasonal-adjustment",
    "title": "4  Stats",
    "section": "\n4.18 Seasonal adjustment",
    "text": "4.18 Seasonal adjustment",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#statistics-for-reporting-the-results-of-model-fits",
    "href": "stats.html#statistics-for-reporting-the-results-of-model-fits",
    "title": "4  Stats",
    "section": "\n4.19 Statistics for reporting the results of model fits",
    "text": "4.19 Statistics for reporting the results of model fits",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#survival-analysis",
    "href": "stats.html#survival-analysis",
    "title": "4  Stats",
    "section": "\n4.20 Survival analysis",
    "text": "4.20 Survival analysis",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "stats.html#tornado-plot",
    "href": "stats.html#tornado-plot",
    "title": "4  Stats",
    "section": "\n4.21 Tornado plot",
    "text": "4.21 Tornado plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Stats</span>"
    ]
  },
  {
    "objectID": "annotations.html",
    "href": "annotations.html",
    "title": "5  Annotations",
    "section": "",
    "text": "5.1 Add p-values",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#annotate-areas-with",
    "href": "annotations.html#annotate-areas-with",
    "title": "5  Annotations",
    "section": "\n5.2 Annotate areas with…",
    "text": "5.2 Annotate areas with…\n\n5.2.1 Circles\n\n5.2.2 Ellipses\n\n5.2.3 Hulls\n\n5.2.4 Rectangles",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#curved-text-labeling",
    "href": "annotations.html#curved-text-labeling",
    "title": "5  Annotations",
    "section": "\n5.3 Curved text labeling",
    "text": "5.3 Curved text labeling",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#direct-labeling",
    "href": "annotations.html#direct-labeling",
    "title": "5  Annotations",
    "section": "\n5.4 Direct labeling",
    "text": "5.4 Direct labeling",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#fitted-model-based-annotations",
    "href": "annotations.html#fitted-model-based-annotations",
    "title": "5  Annotations",
    "section": "\n5.5 Fitted-model-based annotations",
    "text": "5.5 Fitted-model-based annotations",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#highlighting-geoms",
    "href": "annotations.html#highlighting-geoms",
    "title": "5  Annotations",
    "section": "\n5.6 Highlighting geoms",
    "text": "5.6 Highlighting geoms",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#highlighting-points",
    "href": "annotations.html#highlighting-points",
    "title": "5  Annotations",
    "section": "\n5.7 Highlighting points",
    "text": "5.7 Highlighting points",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#inset-plots",
    "href": "annotations.html#inset-plots",
    "title": "5  Annotations",
    "section": "\n5.8 Inset plots",
    "text": "5.8 Inset plots",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#inset-tables",
    "href": "annotations.html#inset-tables",
    "title": "5  Annotations",
    "section": "\n5.9 Inset tables",
    "text": "5.9 Inset tables",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#repel-overlapping-text-labels",
    "href": "annotations.html#repel-overlapping-text-labels",
    "title": "5  Annotations",
    "section": "\n5.10 Repel overlapping text & labels",
    "text": "5.10 Repel overlapping text & labels\n\n5.10.1 Label\n\n5.10.2 Text",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#shadow-text",
    "href": "annotations.html#shadow-text",
    "title": "5  Annotations",
    "section": "\n5.11 Shadow text",
    "text": "5.11 Shadow text",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#significance-brackets",
    "href": "annotations.html#significance-brackets",
    "title": "5  Annotations",
    "section": "\n5.12 Significance brackets",
    "text": "5.12 Significance brackets",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html",
    "href": "scales_and_guides.html",
    "title": "6  Scales and guides",
    "section": "",
    "text": "6.1 Color scales",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html#color-scales",
    "href": "scales_and_guides.html#color-scales",
    "title": "6  Scales and guides",
    "section": "",
    "text": "6.1.1 paletteer\n\n6.1.2 see\n\n6.1.3 R color palette finder",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html#color-blindness",
    "href": "scales_and_guides.html#color-blindness",
    "title": "6  Scales and guides",
    "section": "\n6.2 Color blindness",
    "text": "6.2 Color blindness\n\n6.2.1 Color vision deficiency simulator",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html#cyclical-scales",
    "href": "scales_and_guides.html#cyclical-scales",
    "title": "6  Scales and guides",
    "section": "\n6.3 Cyclical scales",
    "text": "6.3 Cyclical scales",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html#focus-scales",
    "href": "scales_and_guides.html#focus-scales",
    "title": "6  Scales and guides",
    "section": "\n6.4 Focus scales",
    "text": "6.4 Focus scales",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html#multiple-scales",
    "href": "scales_and_guides.html#multiple-scales",
    "title": "6  Scales and guides",
    "section": "\n6.5 Multiple scales",
    "text": "6.5 Multiple scales",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "scales_and_guides.html#wrap-plot",
    "href": "scales_and_guides.html#wrap-plot",
    "title": "6  Scales and guides",
    "section": "\n6.6 Wrap plot",
    "text": "6.6 Wrap plot",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Scales and guides</span>"
    ]
  },
  {
    "objectID": "coordinate_systems.html",
    "href": "coordinate_systems.html",
    "title": "7  Coordinate systems",
    "section": "",
    "text": "7.1 Capping axis lines",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Coordinate systems</span>"
    ]
  },
  {
    "objectID": "coordinate_systems.html#serial-axes-coordinates",
    "href": "coordinate_systems.html#serial-axes-coordinates",
    "title": "7  Coordinate systems",
    "section": "\n7.2 Serial axes coordinates",
    "text": "7.2 Serial axes coordinates",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Coordinate systems</span>"
    ]
  },
  {
    "objectID": "facets.html",
    "href": "facets.html",
    "title": "8  Facets",
    "section": "",
    "text": "8.1 Facet by different data columns",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#facet-calendar",
    "href": "facets.html#facet-calendar",
    "title": "8  Facets",
    "section": "\n8.2 Facet calendar",
    "text": "8.2 Facet calendar",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#facet-data-for-zoom-with-context",
    "href": "facets.html#facet-data-for-zoom-with-context",
    "title": "8  Facets",
    "section": "\n8.3 Facet data for zoom with context",
    "text": "8.3 Facet data for zoom with context",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#facet-wrap-improved",
    "href": "facets.html#facet-wrap-improved",
    "title": "8  Facets",
    "section": "\n8.4 Facet wrap (improved)",
    "text": "8.4 Facet wrap (improved)",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#manual-facets",
    "href": "facets.html#manual-facets",
    "title": "8  Facets",
    "section": "\n8.5 Manual facets",
    "text": "8.5 Manual facets",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#nested-facets",
    "href": "facets.html#nested-facets",
    "title": "8  Facets",
    "section": "\n8.6 Nested facets",
    "text": "8.6 Nested facets",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#one-dimensional-facets",
    "href": "facets.html#one-dimensional-facets",
    "title": "8  Facets",
    "section": "\n8.7 One-dimensional facets",
    "text": "8.7 One-dimensional facets",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#ragged-grids",
    "href": "facets.html#ragged-grids",
    "title": "8  Facets",
    "section": "\n8.8 Ragged grids",
    "text": "8.8 Ragged grids",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "facets.html#split-a-facetted-plot-over-multiple-pages",
    "href": "facets.html#split-a-facetted-plot-over-multiple-pages",
    "title": "8  Facets",
    "section": "\n8.9 Split a facetted plot over multiple pages",
    "text": "8.9 Split a facetted plot over multiple pages",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Facets</span>"
    ]
  },
  {
    "objectID": "themes.html",
    "href": "themes.html",
    "title": "9  Themes",
    "section": "",
    "text": "9.1 Complete themes",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "themes.html#dark-themes",
    "href": "themes.html#dark-themes",
    "title": "9  Themes",
    "section": "\n9.2 Dark themes",
    "text": "9.2 Dark themes\n\n9.2.1 ggdark",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "themes.html#graphpad-prism",
    "href": "themes.html#graphpad-prism",
    "title": "9  Themes",
    "section": "\n9.3 GraphPad prism",
    "text": "9.3 GraphPad prism\n\n9.3.1 ggprism",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "themes.html#theme-elements",
    "href": "themes.html#theme-elements",
    "title": "9  Themes",
    "section": "\n9.4 Theme elements",
    "text": "9.4 Theme elements\n\n9.4.1 ggtext\n\n9.4.2 marquee",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "themes.html#typography-centric-themes",
    "href": "themes.html#typography-centric-themes",
    "title": "9  Themes",
    "section": "\n9.5 Typography-centric themes",
    "text": "9.5 Typography-centric themes\n\n9.5.1 hrbrthemes",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "themes.html#using-extra-fonts",
    "href": "themes.html#using-extra-fonts",
    "title": "9  Themes",
    "section": "\n9.6 Using extra fonts",
    "text": "9.6 Using extra fonts\n\n9.6.1 extrafont\n\n9.6.2 showtext",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "maps.html",
    "href": "maps.html",
    "title": "10  Maps",
    "section": "",
    "text": "10.1 3D maps",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#geofaceting",
    "href": "maps.html#geofaceting",
    "title": "10  Maps",
    "section": "\n10.2 Geofaceting",
    "text": "10.2 Geofaceting",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#north-symbols-and-scale-bars",
    "href": "maps.html#north-symbols-and-scale-bars",
    "title": "10  Maps",
    "section": "\n10.3 North symbols and scale bars",
    "text": "10.3 North symbols and scale bars",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#parliament-plot",
    "href": "maps.html#parliament-plot",
    "title": "10  Maps",
    "section": "\n10.4 Parliament plot",
    "text": "10.4 Parliament plot",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#stamen-maps",
    "href": "maps.html#stamen-maps",
    "title": "10  Maps",
    "section": "\n10.5 Stamen maps",
    "text": "10.5 Stamen maps",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#tidy-map",
    "href": "maps.html#tidy-map",
    "title": "10  Maps",
    "section": "\n10.6 Tidy map",
    "text": "10.6 Tidy map",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#zoomed-inset-panels",
    "href": "maps.html#zoomed-inset-panels",
    "title": "10  Maps",
    "section": "\n10.7 Zoomed inset panels",
    "text": "10.7 Zoomed inset panels",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "maps.html#interactive-maps",
    "href": "maps.html#interactive-maps",
    "title": "10  Maps",
    "section": "\n10.8 Interactive maps",
    "text": "10.8 Interactive maps",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "networks.html",
    "href": "networks.html",
    "title": "11  Networks",
    "section": "",
    "text": "11.1 Alluvial plot",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Networks</span>"
    ]
  },
  {
    "objectID": "networks.html#flowchart",
    "href": "networks.html#flowchart",
    "title": "11  Networks",
    "section": "\n11.2 Flowchart",
    "text": "11.2 Flowchart",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Networks</span>"
    ]
  },
  {
    "objectID": "networks.html#networks",
    "href": "networks.html#networks",
    "title": "11  Networks",
    "section": "\n11.3 Networks",
    "text": "11.3 Networks",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Networks</span>"
    ]
  },
  {
    "objectID": "networks.html#sankey",
    "href": "networks.html#sankey",
    "title": "11  Networks",
    "section": "\n11.4 Sankey",
    "text": "11.4 Sankey\n\n11.4.1 Sankey diagram\n\n11.4.2 Sankey bump Plot",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Networks</span>"
    ]
  },
  {
    "objectID": "interactive_plots.html",
    "href": "interactive_plots.html",
    "title": "12  Interactive plots",
    "section": "",
    "text": "12.1 ggiraph",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Interactive plots</span>"
    ]
  },
  {
    "objectID": "interactive_plots.html#plotly",
    "href": "interactive_plots.html#plotly",
    "title": "12  Interactive plots",
    "section": "\n12.2 Plotly",
    "text": "12.2 Plotly",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Interactive plots</span>"
    ]
  },
  {
    "objectID": "interactive_plots.html#streamgraph",
    "href": "interactive_plots.html#streamgraph",
    "title": "12  Interactive plots",
    "section": "\n12.3 Streamgraph",
    "text": "12.3 Streamgraph",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Interactive plots</span>"
    ]
  },
  {
    "objectID": "interactive_plots.html#trelliscope",
    "href": "interactive_plots.html#trelliscope",
    "title": "12  Interactive plots",
    "section": "\n12.4 Trelliscope",
    "text": "12.4 Trelliscope",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Interactive plots</span>"
    ]
  },
  {
    "objectID": "animated-plots.html",
    "href": "animated-plots.html",
    "title": "13  Animated plots",
    "section": "",
    "text": "13.1 Animation",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Animated plots</span>"
    ]
  },
  {
    "objectID": "animated-plots.html#gif",
    "href": "animated-plots.html#gif",
    "title": "13  Animated plots",
    "section": "\n13.2 GIF",
    "text": "13.2 GIF",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Animated plots</span>"
    ]
  },
  {
    "objectID": "tables.html",
    "href": "tables.html",
    "title": "14  Tables",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Special cases",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Tables</span>"
    ]
  },
  {
    "objectID": "helpers.html",
    "href": "helpers.html",
    "title": "15  Helpers",
    "section": "",
    "text": "15.1 Combining layers",
    "crumbs": [
      "Shortcuts",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Helpers</span>"
    ]
  },
  {
    "objectID": "helpers.html#debugging-ggplot2-internals",
    "href": "helpers.html#debugging-ggplot2-internals",
    "title": "15  Helpers",
    "section": "\n15.2 Debugging ggplot2 internals",
    "text": "15.2 Debugging ggplot2 internals",
    "crumbs": [
      "Shortcuts",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Helpers</span>"
    ]
  },
  {
    "objectID": "helpers.html#im-feeling-lucky",
    "href": "helpers.html#im-feeling-lucky",
    "title": "15  Helpers",
    "section": "\n15.3 I’m feeling lucky!",
    "text": "15.3 I’m feeling lucky!",
    "crumbs": [
      "Shortcuts",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Helpers</span>"
    ]
  },
  {
    "objectID": "interactive_tools.html",
    "href": "interactive_tools.html",
    "title": "16  Interactive tools",
    "section": "",
    "text": "16.1 Interactive interface to plot data and perform statistical tests",
    "crumbs": [
      "Shortcuts",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Interactive tools</span>"
    ]
  },
  {
    "objectID": "interactive_tools.html#shiny",
    "href": "interactive_tools.html#shiny",
    "title": "16  Interactive tools",
    "section": "\n16.2 Shiny",
    "text": "16.2 Shiny\n\n16.2.1 Auto theming\n\n16.2.2 Choosing color palettes interactively\n\n16.2.3 Color picker\n\n16.2.4 Editing layers\n\n16.2.5 Editing themes\n\n16.2.6 Interactive layers\n\n16.2.7 Marginal plots\n\n16.2.8 Theme preview",
    "crumbs": [
      "Shortcuts",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Interactive tools</span>"
    ]
  },
  {
    "objectID": "finishing_touches.html",
    "href": "finishing_touches.html",
    "title": "17  Finishing touches",
    "section": "",
    "text": "17.1 Blending, copying, adjusting, and compositing layers",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Finishing touches</span>"
    ]
  },
  {
    "objectID": "finishing_touches.html#color-manipulation",
    "href": "finishing_touches.html#color-manipulation",
    "title": "17  Finishing touches",
    "section": "\n17.2 Color manipulation",
    "text": "17.2 Color manipulation",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Finishing touches</span>"
    ]
  },
  {
    "objectID": "finishing_touches.html#magnified-inset",
    "href": "finishing_touches.html#magnified-inset",
    "title": "17  Finishing touches",
    "section": "\n17.3 Magnified inset",
    "text": "17.3 Magnified inset",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Finishing touches</span>"
    ]
  },
  {
    "objectID": "finishing_touches.html#point-shapes-improved",
    "href": "finishing_touches.html#point-shapes-improved",
    "title": "17  Finishing touches",
    "section": "\n17.4 Point shapes (improved)",
    "text": "17.4 Point shapes (improved)",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Finishing touches</span>"
    ]
  },
  {
    "objectID": "finishing_touches.html#save-incremental-builds-of-plots",
    "href": "finishing_touches.html#save-incremental-builds-of-plots",
    "title": "17  Finishing touches",
    "section": "\n17.5 Save incremental builds of plots",
    "text": "17.5 Save incremental builds of plots",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Finishing touches</span>"
    ]
  },
  {
    "objectID": "finishing_touches.html#shadow-effect",
    "href": "finishing_touches.html#shadow-effect",
    "title": "17  Finishing touches",
    "section": "\n17.6 Shadow effect",
    "text": "17.6 Shadow effect",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Finishing touches</span>"
    ]
  },
  {
    "objectID": "arranging_plots.html",
    "href": "arranging_plots.html",
    "title": "18  Arranging plots",
    "section": "",
    "text": "18.1 Arranging multiple plots",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Arranging plots</span>"
    ]
  },
  {
    "objectID": "arranging_plots.html#side-panels",
    "href": "arranging_plots.html#side-panels",
    "title": "18  Arranging plots",
    "section": "\n18.2 Side panels",
    "text": "18.2 Side panels",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Arranging plots</span>"
    ]
  },
  {
    "objectID": "arranging_plots.html#converting-base-r-plots-to-ggplot2",
    "href": "arranging_plots.html#converting-base-r-plots-to-ggplot2",
    "title": "18  Arranging plots",
    "section": "\n18.3 Converting base R plots to ggplot2",
    "text": "18.3 Converting base R plots to ggplot2",
    "crumbs": [
      "Getting ready to publish",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Arranging plots</span>"
    ]
  },
  {
    "objectID": "python.html",
    "href": "python.html",
    "title": "19  Python",
    "section": "",
    "text": "19.1 ggplot2’s descendants",
    "crumbs": [
      "Beyond R",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Python</span>"
    ]
  },
  {
    "objectID": "python.html#borrowing-from-python-with-reticulate",
    "href": "python.html#borrowing-from-python-with-reticulate",
    "title": "19  Python",
    "section": "\n19.2 Borrowing from Python with reticulate",
    "text": "19.2 Borrowing from Python with reticulate\n\n19.2.1 Sunburst plot",
    "crumbs": [
      "Beyond R",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Python</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Arel-Bundock, Vincent. 2024. Rdatasets: A Collection of Datasets\nOriginally Distributed in Various r Packages. https://vincentarelbundock.github.io/Rdatasets/.\n\n\nArnold, Jeffrey B. 2024. Ggthemes: Extra Themes, Scales and Geoms\nfor ’Ggplot2’. https://CRAN.R-project.org/package=ggthemes.\n\n\nChang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke,\nYihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, and Barbara\nBorges. 2024. Shiny: Web Application Framework for r. https://shiny.posit.co/.\n\n\nCsárdi, Gábor, and Maëlle Salmon. 2025. Pkgsearch: Search and Query\nCRAN r Packages. https://CRAN.R-project.org/package=pkgsearch.\n\n\nCui, Boxuan. 2024. DataExplorer: Automate Data Exploration and\nTreatment. http://boxuancui.github.io/DataExplorer/.\n\n\n(Ed.), Colin McIntosh. 2013. Cambridge Advanced Learner’s\nDictionary. 4th ed. Cambridge University Press.\n\n\nFirke, Sam. 2024. Janitor: Simple Tools for Examining and Cleaning\nDirty Data. https://github.com/sfirke/janitor.\n\n\nGassen, Joachim. 2020. ExPanDaR: Explore Your Data\nInteractively. https://joachim-gassen.github.io/ExPanDaR/.\n\n\nGrantham, Neal. 2025. Ggbraid: Braid Ribbons in ’Ggplot2’. https://github.com/nsgrantham/ggbraid.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, Alexandra\nLauer, JooYoung Seo, Ken Brevoort, and Olivier Roy. 2025. Gt: Easily\nCreate Presentation-Ready Display Tables. https://gt.rstudio.com.\n\n\nIhaka, Ross, Paul Murrell, Kurt Hornik, Jason C. Fisher, Reto Stauffer,\nClaus O. Wilke, Claire D. McWhite, and Achim Zeileis. 2024.\nColorspace: A Toolbox for Manipulating and Assessing Colors and\nPalettes. https://CRAN.R-project.org/package=colorspace.\n\n\nKassambara, Alboukadel. 2023. Ggcorrplot: Visualization of a\nCorrelation Matrix Using ’Ggplot2’. http://www.sthda.com/english/wiki/ggcorrplot-visualization-of-a-correlation-matrix-using-ggplot2.\n\n\nMock, Thomas. 2025. gtExtras: Extending ’Gt’ for Beautiful HTML\nTables. https://CRAN.R-project.org/package=gtExtras.\n\n\nMouksassi, Samer, Dean Attali, James Craig, Benjamin Rich, and Michael\nSachs. 2024. Ggquickeda: Quickly Explore Your Data Using ’Ggplot2’\nand ’Table1’ Summary Tables. https://CRAN.R-project.org/package=ggquickeda.\n\n\nMüller, Kirill, and Hadley Wickham. 2025. Tibble: Simple Data\nFrames. https://CRAN.R-project.org/package=tibble.\n\n\nNijs, Vincent. 2024. Radiant: Business Analytics Using r and\nShiny. https://CRAN.R-project.org/package=radiant.\n\n\nQiu, Yixuan, and Dave Raggett. 2024. Showtext: Using Fonts More\nEasily in r Graphs. https://CRAN.R-project.org/package=showtext.\n\n\nRivas-González, Iker. 2022. ggHoriPlot: Horizon Plots for\n’Ggplot2’. https://CRAN.R-project.org/package=ggHoriPlot.\n\n\nSanderson, Steven, and Antti Rask. 2025. RandomWalker: Generate\nRandom Walks Compatible with the ’Tidyverse’. https://CRAN.R-project.org/package=RandomWalker.\n\n\nSchloerke, Barret, Di Cook, Joseph Larmarange, Francois Briatte, Moritz\nMarbach, Edwin Thoen, Amos Elberg, and Jason Crowley. 2024. GGally:\nExtension to ’Ggplot2’. https://ggobi.github.io/ggally/.\n\n\nSchwabish, Jonathan A. 2021. Better Data Visualizations: A Guide for\nScholars, Researchers, and Wonks. 1st ed. Columbia University\nPress.\n\n\nSjoberg, David. 2021. Ggstream: Create Streamplots in\n’Ggplot2’. https://CRAN.R-project.org/package=ggstream.\n\n\nSlowikowski, Kamil. 2024. Ggrepel: Automatically Position\nNon-Overlapping Text Labels with ’Ggplot2’. https://CRAN.R-project.org/package=ggrepel.\n\n\nSpinu, Vitalie, Garrett Grolemund, and Hadley Wickham. 2024.\nLubridate: Make Dealing with Dates a Little Easier. https://CRAN.R-project.org/package=lubridate.\n\n\nTierney, Nicholas, Di Cook, Miles McBain, and Colin Fay. 2024.\nNaniar: Data Structures, Summaries, and Visualisations for Missing\nData. https://naniar.njtierney.com/.\n\n\nWickham, Hadley. 2015. Ggplot2movies: Movies Data. https://CRAN.R-project.org/package=ggplot2movies.\n\n\n———. 2016. Ggplot2: Elegant Graphics for Data Analysis. 2nd ed.\nSpringer-Verlag New York.\n\n\n———. 2023a. Conflicted: An Alternative Conflict Resolution\nStrategy. https://conflicted.r-lib.org/.\n\n\n———. 2023b. Forcats: Tools for Working with Categorical Variables\n(Factors). https://CRAN.R-project.org/package=forcats.\n\n\n———. 2023c. Stringr: Simple, Consistent Wrappers for Common String\nOperations. https://CRAN.R-project.org/package=stringr.\n\n\n———. 2023d. Tidyverse: Easily Install and Load the ’Tidyverse’.\nhttps://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, and Jennifer Bryan. 2023. R Packages: Organize,\nTest, Document, and Share Your Code. 2nd ed. O’Reilly.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023.\nR for Data Science: Import, Tidy, Transform, Visualize, and Model\nData. 2nd ed. O’Reilly.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen,\nKohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, Dewey\nDunnington, and Teun van den Brand. 2025. Ggplot2: Create Elegant\nData Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis\nVaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://dplyr.tidyverse.org.\n\n\nWickham, Hadley, Thomas Lin Pedersen, and Dana Seidel. 2023. Scales:\nScale Functions for Visualization. https://scales.r-lib.org.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2024. Tidyr:\nTidy Messy Data. https://tidyr.tidyverse.org.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "Basics",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Basics"
    ]
  },
  {
    "objectID": "layers.html",
    "href": "layers.html",
    "title": "Layers",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Layers"
    ]
  },
  {
    "objectID": "special_cases.html",
    "href": "special_cases.html",
    "title": "Special cases",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Special cases"
    ]
  },
  {
    "objectID": "shortcuts.html",
    "href": "shortcuts.html",
    "title": "Shortcuts",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Shortcuts"
    ]
  },
  {
    "objectID": "getting_ready_to_publish.html",
    "href": "getting_ready_to_publish.html",
    "title": "Getting ready to publish",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Getting ready to publish"
    ]
  },
  {
    "objectID": "beyond_r.html",
    "href": "beyond_r.html",
    "title": "Beyond R",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Beyond R"
    ]
  },
  {
    "objectID": "case_studies.html",
    "href": "case_studies.html",
    "title": "Case studies",
    "section": "",
    "text": "This book/site is under construction\n\n\n\nEverything is liable to change, even the title",
    "crumbs": [
      "Case studies"
    ]
  },
  {
    "objectID": "geoms.html#sec-area-charts",
    "href": "geoms.html#sec-area-charts",
    "title": "3  Geoms",
    "section": "",
    "text": "3.1.1 Horizon chart\nA horizon chart is a method for condensing time series data into a format that is both informative and relatively easy to interpret.\nOften, when you have both positive and negative values, they lie on both sides of the x-axis. In a horizon chart, the negative values are on the same side as the positive ones.\nWe use color to show whether the values are positive or negative. But also for the magnitude of those values.\nAs Jonathan Schwabish points out in their book, Better Data Visualizations (Schwabish 2021), “the purpose of the horizon chart is not necessarily to enable readers to pick out specific values, but instead to easily spot general trends and identify extreme values”.\n\n3.1.1.1 Viz #1: Helsinki temperatures, part I\nFor the horizon chart, we’ll be using ggHoriPlot (Rivas-González 2022). The package includes various example data sets. But we’ll be using weather data from the Finnish Meteorological Institute (FMI). Its open data, weather observations are licensed under CC BY 4.0.\nUsing the FMI API (Application Programming Interface), I retrieved the average temperatures in Helsinki (Kaisaniemi weather station) for the years 2000-2024. You can take a look at the data below.\n\n  \n\nWe have avg_temperature_celsius (daily average temperature (in Celsius)), day, month, and year. We also have the date_dummy column. It is there because we want to use the month as the x-axis. But the column needs to be in date format for our use case. So we need all the rows to have the same dummy year with real months and days. I chose 2024 because it was a leap year. Without it, all the rows with February 29th would have NA in that column instead of the correct values.\nBefore we can proceed with the visualization, we need to perform some data wrangling. First, we’ll remove outliers using the interquartile range (IQR) method.\nlibrary(dplyr)\n\n# Filter temperature data to exclude outliers based on 1.5 * IQR method\ncutpoints &lt;- temperature_hki %&gt;%\n  filter(\n    between(\n      avg_temperature_celsius,\n      quantile(\n        avg_temperature_celsius, 0.25, na.rm = TRUE\n      ) - 1.5 * IQR(avg_temperature_celsius, na.rm = TRUE),\n      quantile(\n        avg_temperature_celsius, 0.75, na.rm = TRUE\n      ) + 1.5 * IQR(avg_temperature_celsius, na.rm = TRUE)\n    )\n  )\n\n  \n\nFifteen outliers were filtered out, and we can continue. Next, we’ll calculate the midpoint of the temperature range and also divide the scale into evenly spaced value ranges. We’ll use the first as the origin for the horizon chart and the second to determine how to color the areas.\n# Calculate the midpoint of the temperature range for use in horizon chart\norigin &lt;- cutpoints %&gt;%\n  summarize(origin = mean(range(avg_temperature_celsius))) %&gt;% \n  pull(origin)\n\n# Create the scale vector:\n# 7 evenly spaced values across the filtered temperature range.\n# Drop the 4th value (the midpoint), as required by gghoriplot scale input\nscale &lt;- cutpoints %&gt;%\n  summarize(\n    min_val = min(avg_temperature_celsius),\n    max_val = max(avg_temperature_celsius)\n  ) %&gt;%\n  # Generate 7 evenly spaced values\n  with(seq(min_val, max_val, length.out = 7)) %&gt;% \n  # Convert to tibble to use dplyr::slice()\n  tibble() %&gt;%\n  # Remove the middle value (4th out of 7)\n  slice(-4) %&gt;% \n  # Return as plain numeric vector\n  pull(.)\nThe origin is 3.55, and the scale cutpoints are as follows: -19.3, -11.68, -4.07, 11.17, 18.78, 26.4.\nNow we’re ready for the visualization itself. Besides ggHoriPlot and ggplot2, we’ll be using ggthemes (Arnold 2024) to provide us the theme. We’ll dive deeper into themes (including ggthemes in 9.1.6 ggthemes) later on in Chapter 9 Themes.\nWe’re using geom_horizon() to create the horizon chart. The arguments to pay attention to are fill (inside aes()), origin, and horizonscale. They are all using the origin and scale we calculated earlier. scale_fill_hcl() is also available in the ggHoriPlot package. Otherwise, we’re using basic ggplot2 functionalities.\nlibrary(ggHoriPlot) # for geom_horizon() to create horizon plots\nlibrary(ggplot2)    # for general plotting functions\nlibrary(ggthemes)   # for additional themes like theme_few()\n\n# Create the horizon chart\n  ggplot(temperature_hki) +\n  \n  # Horizon chart layer, mapping x, y, and fill aesthetics\n  geom_horizon(\n    aes(\n      date_dummy,              # x-axis: typically date\n      avg_temperature_celsius, # y-axis: temperature variable\n      fill = ..Cutpoints..     # fill determined by horizon chart cutpoints\n    ), \n    origin       = origin, # baseline (e.g., 0°C); defines neutral midpoint\n    horizonscale = scale   # vertical scale; controls how bands are split\n  ) +\n  \n  # Use a diverging color scale (red-blue), reversed so red = high temp\n  scale_fill_hcl(palette = 'RdBu', reverse = TRUE) +\n  \n  # Create one small horizon chart per year, stacked vertically\n  facet_grid(vars(year)) +\n  \n  # Use a clean, simple theme based on the rules and examples from Stephen\n  # Few's Show Me the Numbers and Practical Rules for Using Color in Charts\n  theme_few() +\n  \n  # Customize appearance\n  theme(\n    # Customize x-axis labels\n    axis.text.x     = element_text(size = 10),\n    # Remove unnecessary labels\n    axis.text.y     = element_blank(),                   \n    axis.title.y    = element_blank(),                   \n    axis.ticks.y    = element_blank(),                   \n    panel.border    = element_blank(),                   \n    # Remove vertical space between facets\n    panel.spacing.y = unit(0, \"lines\"),                  \n    # Subtle caption style\n    plot.caption    = element_text(size = 8, hjust = 0, color = \"#777777\"),\n    # Adjust margins because otherwise Jan is too close to the left edge\n    plot.margin     = margin(10, 10, 10, 15),             \n    # Customize facet labels\n    strip.text.y    = element_text(size = 8, angle = 0, hjust = 0)  \n  ) +\n  \n  # Format x-axis to show months (with short names) without expansion\n  scale_x_date(\n    expand      = c(0, 0),\n    date_breaks = \"1 month\", \n    date_labels = \"%b\"\n  ) +\n  \n  # Add informative plot title, subtitle, and data source caption\n  labs(\n    title    = \"Average daily temperature (Celsius) in Helsinki\",\n    subtitle = \"From 2000 to 2024\",\n    caption  = \"Data: Finnish Meteorological Institute open data, weather observations (CC BY 4.0)\",\n    x        = NULL # remove x-axis title\n  )\n\nI’m not a climatologist, but it does seem like there is a trend, over time, of Helsinki having milder winters. The summer temperatures are less clear-cut and will need a closer look.\n\n3.1.2 Ribbon chart (improved)\nAs the ggplot2 documentation tells us, an area chart is, in fact, a special case of a ribbon chart. That makes sense when you realize that every type of area chart has a ymin and ymax. In the basic area chart, ymin is zero, and ymax is y. (Wickham et al. 2025)\nThe ribbon chart, then, displays the area between two lines. geom_ribbon() gets the job done when the lines don’t meet. But as you’ll soon see, for those cases where they do, you need something called braiding. You can read more about it in the ggbraid (Grantham 2025) documentation.\n\n3.1.2.1 Viz #2: IMDB movies, Part I\nWe’ll take a look at what the problem (and solution) looks like with real data. The question we’d like to answer here is which genre, comedy or drama, has produced more movies during the 20th century.\nBut let’s first examine the data we’ll be using for this. Time series data works best for this type of chart. Let’s stick to the ggplot2movies (Wickham 2015) data set that we first encountered in 2.1.2 IMDb movies (1893-2005) and the movies_na tibble.\nWe’ll perform some transformations to prepare the data for visualization. In this case, we’ll need the data in two formats, long and short.\nLet’s first create the long tibble consisting of genre, year, and n (for the count).\nOne minor detail to note here is that we’ll turn the genre column from character to factor format. We’ll use forcats (Wickham 2023a) from tidyverse (Wickham 2023c) to do that. It’s not necessary in this case, but it’s good practice.\n\nlibrary(forcats)\nlibrary(tidyr)\n\n# Transform and filter the `movies_na` dataset\nmovies_na_long &lt;- movies_na %&gt;%\n  \n  # Pivot genre columns (from Action to Short) into long format:\n  # Creates two columns: \"genre\" and \"value\"\n  pivot_longer(Action:Short, names_to = \"genre\") %&gt;%\n  \n  # Filter to keep only:\n  # - rows where the movie is flagged in that genre (value != 0)\n  # - only the genres Comedy and Drama\n  # - movies released between 1900 and 2000\n  filter(\n    value != 0,\n    genre %in% c(\"Comedy\", \"Drama\"),\n    between(year, 1900, 2000)\n  ) %&gt;%\n  \n  # Convert genre to a factor\n  mutate(genre = as_factor(genre)) %&gt;%\n  \n  # Count the number of movies per genre per year\n  count(genre, year)\n\n\n  \n\nNext, we’ll split the genre into two separate columns, Comedy and Drama. They will retrieve their values from the n column.\nWe’ll also be adding a fill_condition column. We’ll use that later to determine which color to use to fill the area between the two lines.\n\n# Convert long-format genre counts back to wide format and compare values\nmovies_na_wide &lt;- movies_na_long %&gt;%\n  \n  # Pivot genre counts from long to wide:\n  # Each genre becomes its own column (e.g., Comedy, Drama),\n  # with yearly counts as values\n  pivot_wider(\n    names_from  = genre,\n    values_from = n\n  ) %&gt;%\n  \n  # Create a new logical column indicating whether\n  # Comedy had fewer movies than Drama in that year\n  mutate(fill_condition = Comedy &lt; Drama)\n\n\n  \n\nNow we can return to the topic of why we need to use an extension for cases where the lines don’t stay separate.\nHere’s what the basic visualization would look like with geom_ribbon() from ggplot2.\n\nggplot() +\n  geom_line(\n    aes(year, n, linetype = genre),\n    data = movies_na_long\n  ) +\n  geom_ribbon(\n    aes(year, ymin = Comedy, ymax = Drama, fill = fill_condition),\n    data  = movies_na_wide,\n    alpha = 0.7\n  )\n\n\n\n\n\n\n\nThat won’t work if we want to use the ribbon chart to show where the two categories change places, indicating which is greater.\nBut that’s where ggbraid’s geom_braid() comes to the rescue. The basic code is the same. We’ll only switch the geom function.\nThe rest of the code is to make the visualization more presentable. Note that we’ll move the legend inside the plot. We’ll use the legend.position argument inside the theme() function to do that. There’s enough white space inside the plot to accommodate the legend. This way, we gain more space to showcase the time series element of the plot.\n\nlibrary(ggbraid) # for geom_braid() to visualize overlapping time series\nlibrary(ggplot2) # for general plotting functions\n\nggplot() +\n  \n  # Line plot for number of movies per genre per year\n  geom_line(\n    aes(year, n, linetype = genre),\n    data = movies_na_long\n  ) +\n  \n  # Braid layer to highlight which genre had more movies per year\n  geom_braid(\n    aes(year, ymin = Comedy, ymax = Drama, fill = fill_condition),\n    data  = movies_na_wide,\n    alpha = 0.7\n  ) +\n  \n  # Text annotation when comedies dominated\n  annotate(\n    \"text\",\n    x     = 1938,\n    y     = 300,\n    size  = 4,\n    label = \"More comedies than drama\",\n    hjust = 0.5,\n    color = \"#F36523\"\n  ) +\n  \n  # Text annotation when dramas dominated\n  annotate(\n    \"text\",\n    x     = 1975,\n    y     = 80,\n    size  = 4,\n    label = \"More drama than comedies\",\n    hjust = 0.5,\n    color = \"#125184\"\n  ) +\n  \n  # Manually set fill colors for the braid based on fill condition\n  scale_fill_manual(values = c(\"#F36523\", \"#125184\")) +\n  \n  # Customize x-axis: limit, spacing, and ticks\n  scale_x_continuous(\n    expand = c(0, 1),\n    limits = c(1899, 2001),\n    breaks = seq(1900, 2000, by = 10)\n  ) +\n  \n  # Customize y-axis: limit, spacing, and ticks\n  scale_y_continuous(\n    expand = c(0, 1),\n    limits = c(0, 800),\n    breaks = seq(0, 800, by = 100)\n  ) +\n  \n  # Hide fill legend (keep linetype legend only)\n  guides(fill = \"none\") +\n  \n  # Add plot title, subtitle, and axis labels\n  labs(\n    linetype = NULL,\n    title    = \"100 years of cinema\",\n    subtitle = \"Number of comedies vs. dramas throughout the 20th century\",\n    x        = NULL,\n    y        = NULL\n  ) +\n  \n  # Use a clean black-and-white theme as a base\n  theme_bw() +\n  \n  # Custom legend appearance and positioning\n  theme(\n    legend.direction = \"horizontal\",\n    legend.box.background = element_rect(\n      color     = \"black\",\n      linetype  = \"solid\",\n      linewidth = 0.5\n    ),\n    legend.key.size  = unit(2, \"line\"),\n    legend.position  = c(0.19, 0.88), # relative position inside plot\n    legend.text      = element_text(size = 10)\n  )\n\n\n\n\n\n\n\nI’m not an expert on this topic either. Based on this dataset, however, there appears to be a correlation between major wars (WWI, WWII, and the Vietnam War) and the production of more comedies than dramas.\n\n3.1.2.2 Viz #3: Helsinki temperatures, part II\nLet’s take a look at another ribbon chart. We can use the data set from 3.1.1 Horizon chart, which contains average daily temperatures in Helsinki from 2000 to 2024. We’ll compare the two years, 2000 and 2024. Which one had more warmer days?\nFirst, we’ll perform similar transformations as before and convert the data into both long and wide formats.\nOne minor detail to note here is that we’ll need to turn the year column from numeric to factor format. It won’t work as a category for the linetype argument otherwise. We’ll again use the forcats package to do that.\n\ntemperature_hki_long &lt;- temperature_hki %&gt;%\n  \n  # Filter data to include only the years 2000 and 2024\n  filter(year %in% c(2000, 2024)) %&gt;%\n  \n  # Convert `year` to a factor (useful for plotting or grouping)\n  mutate(year = as_factor(year)) %&gt;%\n  \n  # Keep only the necessary columns for analysis or visualization\n  select(avg_temperature_celsius, year, date_dummy)\n\nIn this next transformation, note the use of the names_prefix argument. A column with a number as the first character of the name is not ideal. This will take care of that.\n\n# Pivot data from long to wide format\ntemperature_hki_wide &lt;- temperature_hki_long %&gt;%\n  \n  # Creates one column per year (e.g., year_2000, year_2024),\n  # using temperature values as the content\n  pivot_wider(\n    names_from   = year,\n    names_prefix = \"year_\",\n    values_from  = avg_temperature_celsius\n  ) %&gt;%\n  \n  # Create a new logical column to compare the two years:\n  # TRUE if 2024 temp &gt; 2000 temp for that date\n  mutate(fill_condition = year_2000 &lt; year_2024)\n\nWe’ll also count the number (and percentage of total) of days where the average temperature is greater in 2000 and 2024. We’ll use this information for annotations.\n\ntemperature_hki_wide %&gt;%\n  \n  # Count how many days had each condition (TRUE/FALSE)\n  count(fill_condition) %&gt;%\n  \n  # Calculate the percentage for each group\n  mutate(n_pct = round(n / sum(n), 3))\n\n# A tibble: 2 × 3\n  fill_condition     n n_pct\n  &lt;lgl&gt;          &lt;int&gt; &lt;dbl&gt;\n1 FALSE            145 0.396\n2 TRUE             221 0.604\n\n\nLooks like 2024 has more days (60.4%) that were, on average, warmer than 2000 (39.6%).\nThe visualization itself is like the movie example. The most significant difference is the use of two packages from the tidyverse family.\nstr_glue() from stringr (Wickham 2023b) features a convenient implicit line break functionality. We’ll also use it to add the degree Celsius symbol (°C) to the y-axis.\nas_date() from lubridate (Spinu, Grolemund, and Wickham 2024) allows us to use the date in character format to map it to the x-axis. This helps us place the annotations in the correct position.\n\nlibrary(ggbraid)   # for geom_braid(), visualizing area between two lines\nlibrary(ggplot2)   # for general plotting functions\nlibrary(lubridate) # for working with date types\nlibrary(stringr)   # for string manipulation like str_glue()\n\nggplot() +\n  \n  # Add temperature lines for each year (2000 and 2024)\n  geom_line(\n    aes(date_dummy, avg_temperature_celsius, linetype = year),\n    data = temperature_hki_long\n  ) +\n  \n  # Add braided area showing difference between 2000 and 2024\n  # Fill based on which year was warmer (fill_condition)\n  geom_braid(\n    aes(\n      date_dummy,\n      ymin = year_2000,\n      ymax = year_2024,\n      fill = fill_condition\n    ),\n    data  = temperature_hki_wide,\n    alpha = 0.7\n  ) +\n  \n  # Annotate area where 2000 was warmer\n  annotate(\n    \"text\",\n    x     = as_date(\"2024-03-01\"),\n    y     = -17.5,\n    size  = 4,\n    label = str_glue(\n      \"2000 was warmer\n      40 % of the days\"\n    ),\n    hjust = 0.5,\n    color = \"#125184\"\n  ) +\n  \n  # Annotate area where 2024 was warmer\n  annotate(\n    \"text\",\n    x     = as_date(\"2024-11-15\"),\n    y     = 17.5,\n    size  = 4,\n    label = str_glue(\n      \"2024 was warmer \n      60 % of the days\"\n    ),\n    hjust = 0.5,\n    color = \"#F36523\"\n  ) +\n  \n  # Manual fill colors: blue for 2000 warmer, orange for 2024 warmer\n  scale_fill_manual(values = c(\"#125184\", \"#F36523\")) +\n  \n  # Format x-axis: monthly ticks, short month labels\n  scale_x_date(\n    date_breaks = \"1 month\",\n    date_labels = \"%b\",\n    expand      = c(0, 0.1)\n  ) +\n  \n  # Format y-axis: show temperature with °C symbol\n  scale_y_continuous(labels = ~ str_glue(\"{.x} °C\")) +\n  \n  # Hide fill legend (keep linetype legend only)\n  guides(fill = \"none\") +\n  \n  # Add plot title, subtitle, and caption\n  labs(\n    linetype = NULL,\n    title    = \"Is the temperature rising?\",\n    subtitle = \"Average daily temperatures (Celsius) in Helsinki, 2000 vs. 2024\",\n    caption  = \"Data: Finnish Meteorological Institute open data, weather observations (CC BY 4.0)\",\n    x        = NULL,\n    y        = NULL\n  ) +\n  \n  # Use a clean, minimal black-and-white theme\n  theme_bw() +\n  \n  # Customize legend and caption styling\n  theme(\n    legend.direction = \"horizontal\",\n    legend.box.background = element_rect(\n      color     = \"black\",\n      linetype  = \"solid\",\n      linewidth = 0.5\n    ),\n    legend.key.size  = unit(2, \"line\"),\n    legend.position  = c(0.83, 0.12), # bottom-right position\n    legend.text      = element_text(size = 10),\n    plot.caption     = element_text(size = 8, hjust = 1, color = \"#777777\")\n  )\n\n\n\n\n\n\n\nAnd so we have another perspective on the Helsinki temperature data set.\n\n3.1.3 Streamgraph\nA streamgraph is a stacked area chart where the areas are positioned around the central axis.\n\n3.1.3.1 Viz #4: ggplot2 dependencies\nIf you’ve read the book in chronological order, you’ve already encountered a streamgraph in Preface. We will use that visualization as the example in this chapter.\nThe purpose of this visualization is to illustrate how the ggplot2 dependencies have evolved from a small speck in 2007 to their current state at the end of 2024. This is the exact use case for which I would use a streamgraph.\nBefore we proceed, I want to mention Georgios Karamanis. Their original visualization for Tidy Tuesday (see Figure 3.1) was the inspiration for my version.\n\n\nFigure 3.1: The original visualization for Tidy Tuesday by Georgios Karamanis\n\nIf you want to know the differences, they are as follows:\n\nUse the initial release years instead of the latest release…\n…which meant switching the data source\nUse the ggplot2-related packages’ metadata\nBring in a third type, Imports\n\nChange the color palette\nChange the fonts to Roboto Mono\n\nAnnotate all the major ggplot2 releases\nMake the stream chart less wavy\nOther, smaller changes\n\nWe’ll cover these in more detail as we proceed.\nLet’s take a look at the data we’re working with. It was gathered with pkgsearch (Csárdi and Salmon 2025).\n\n  \n\nWe won’t reiterate the definitions of the different types (see Preface for them). But we can see that the count for each type starts small in 2007 and increases significantly by 2024.\nLet’s first take a look at what the streamgraph would look like with default settings. We’ll use geom_stream() from ggstream (Sjoberg 2021) for that.\n\nlibrary(ggstream)\n\nggplot2_dependencies_by_year %&gt;%\n  ggplot() +\n  geom_stream(\n    aes(\n      x    = year,\n      y    = n,\n      fill = type\n    )\n  )\n\n\n\n\n\n\n\nThat’s not bad for ten lines of code. But we can make it more presentable.\nLet’s start with colors. In the previous visualizations, we’ve inserted the hex codes straight into the code. But since we need to use these colors in many places, let’s convert them into a vector so we don’t have to repeat ourselves.\n\ncolor_1 &lt;- \"#F36523\"\ncolor_2 &lt;- \"#125184\"\ncolor_3 &lt;- \"#2E8B57\"\ncolors  &lt;- c(color_1, color_2, color_3)\n\ncolors\n\n[1] \"#F36523\" \"#125184\" \"#2E8B57\"\n\n\nFor the font, I wanted to use something different. Roboto is a slightly futuristic font (family) that I like. But it doesn’t come with R.\nThat’s why we’ll use showtext (Qiu and Raggett 2024) (read more about it in 9.6.2 showtext).\n\nlibrary(showtext)\n\nfont_add_google(\"Roboto Mono\", \"roboto\")\nshowtext_auto()\nfont_family &lt;- \"roboto\"\n\nNext, we’ll create the annotations that’ll be displayed on the right side of the graph.\nThe labels are in an HTML-style format. To be used later with ggtext (Wilke and Wiernik 2022). We’ll delve into this topic in more detail in 9.4.1 ggtext.\n\nannotation_numbers &lt;- ggplot2_dependencies_by_year %&gt;%\n  \n  # Total number of packages per dependency type\n  summarize(\n    n   = sum(n),\n    .by = type\n  ) %&gt;%\n  \n  # Ensure consistent vertical stacking order\n  arrange(type) %&gt;%\n  \n  mutate(\n    \n    # Manually assign y-positions for labels\n    y = c(390, 75, -300),\n    \n    # Create HTML-styled rich labels with colored numbers\n    label = case_when(\n      type == \"Depends\" ~\n        str_glue(\"**&lt;span style='color:{color_1}'&gt;{n}&lt;/span&gt;**\"),\n      type == \"Imports\" ~\n        str_glue(\"**&lt;span style='color:{color_2}'&gt;{n}&lt;/span&gt;**\"),\n      type == \"Suggests\" ~\n        str_glue(\"**&lt;span style='color:{color_3}'&gt;{n}&lt;/span&gt;**\")\n    )\n  )\n\n\n  \n\nNow it’s time to bring it all together.\nUsually, you would start with the main geom for the plot. But we must begin with the data points and labels due to the layer order. We’re stacking layers on top of each other, and here we want the lines for the labels to stay behind the streamgraph.\nThe new packages we haven’t mentioned before are colorspace (Ihaka et al. 2024) and ggrepel (Slowikowski 2024).\nWe get back to them both in detail later, but colorspace (see more in 16.2.2.1 colorspace) is used for color manipulation. In this graph, we’re making the borders of the areas slightly darker than the areas themselves. ggrepel (see more in 5.10 Repel overlapping labels & text) is used for creating labels that don’t overlap.\n\nlibrary(colorspace) # for color manipulation like darken()\nlibrary(ggplot2)    # for general plotting functions\nlibrary(ggrepel)    # for placing non-overlapping labels\nlibrary(ggstream)   # for creating streamgraphs\nlibrary(ggtext)     # for text manipulation\nlibrary(stringr)    # for string manipulation like str_glue()\n\n  ggplot(ggplot2_dependencies_by_year) +\n\n  # Add a small point at the origin to anchor the first version label\n  geom_point(\n    aes(x = 2007, y = 0),\n    data = NULL,\n    size = 1.5,\n    stat = \"unique\",\n  ) +\n  \n  # Add a label for ggplot2 version 0.5 (2007)\n  geom_label_repel(\n        aes(x = 2007, y = 0, label = \"{ggplot2}\\nver 0.5\"),\n        data          = NULL,\n        stat          = \"unique\",\n        nudge_y       = 75,\n        label.size    = NA,\n        lineheight    = 0.5,\n        family        = font_family\n    ) +\n  \n  # Add a label for ggplot2 version 1.0 (2014)\n  geom_label_repel(\n        aes(x = 2014, y = 50, label = \"{ggplot2}\\nver 1.0\"),\n        data          = NULL,\n        stat          = \"unique\",\n        nudge_y       = 115,\n        label.size    = NA,\n        lineheight    = 0.5,\n        family        = font_family\n    ) +\n  \n  # Add a label for ggplot2 version 2.0 (2015)\n  geom_label_repel(\n        aes(x = 2015, y = 125, label = \"{ggplot2}\\nver 2.0\"),\n        data          = NULL,\n        stat          = \"unique\",\n        nudge_y       = 140,\n        label.size    = NA,\n        lineheight    = 0.5,\n        family        = font_family\n    ) +\n  \n  # Add a label for ggplot2 version 3.0 (2018)\n  geom_label_repel(\n        aes(x = 2018, y = 100, label = \"{ggplot2}\\nver 3.0\"),\n        data          = NULL,\n        stat          = \"unique\",\n        nudge_y       = 200,\n        label.size    = NA,\n        lineheight    = 0.5,\n        family        = font_family\n    ) +\n  \n  # Add a label for ggplot2 version 3.5 (2024)\n  geom_label_repel(\n        aes(x = 2024, y = 410, label = \"{ggplot2}\\nver 3.5\"),\n        data          = NULL,\n        stat          = \"unique\",\n        nudge_y       = 75,\n        label.size    = NA,\n        lineheight    = 0.5,\n        family        = font_family\n    ) +\n  \n  # Create a stream-like area chart showing the number of dependent \n  # packages by type and year\n  geom_stream(\n    aes(\n      x     = year,\n      y     = n,\n      fill  = type,\n      # Slightly darken stream borders for contrast\n      color = after_scale(darken(fill))\n    ),\n    # bw means bandwidth of kernel density estimation\n    # This is the argument you can control the waviness with\n    # The closer the value is to 1, the less wavy the graph\n    bw        = 1,\n    linewidth = 0.1\n  ) +\n  \n  # Add annotations on the right side using rich text labels from ggtext\n  geom_richtext(\n    data = annotation_numbers,\n    aes(\n      x     = 2024 + 0.2,\n      y     = y,\n      label = label\n    ),\n    hjust      = 0,\n    lineheight = 0.9,\n    label.size = NA,\n    size       = 5,\n    family     = font_family\n  ) +\n\n  # Configure the x-axis with major and minor breaks\n  scale_x_continuous(\n    breaks       = seq(2008, 2024, 2),\n    minor_breaks = 2007:2024\n  ) +\n  \n  # Manually assign fill colors for the dependency types\n  scale_fill_manual(values = colors) +\n\n  # Allow annotations to extend outside the plot area\n  coord_cartesian(clip = \"off\") +\n\n  # Set plot titles and descriptions using inline color styling\n  labs(\n    title    = str_glue(\"Number of packages on CRAN in 2024 &lt;span style='color:{color_1}'&gt;depending on&lt;/span&gt;, &lt;span style='color:{color_2}'&gt;importing&lt;/span&gt;, or &lt;span style='color:{color_3}'&gt;suggesting&lt;/span&gt; {{ggplot2}}\"),\n    subtitle = \"Aggregated by the initial package release years. Categories may change from one version to another and were taken from the latest versions.\",\n    caption  = \"Data: CRAN via {pkgsearch} | Visualization: Antti Rask | Updated: 2024-12-31\"\n  ) +\n\n  # Apply a clean, minimal theme and customize text styling\n  theme_minimal(base_family = font_family) +\n  \n  # Customize title and caption styling\n  theme(\n    axis.text.x = element_text(\n      size   = 14,\n      face   = \"bold\",\n      margin = margin(10, 0, 0, 0)\n    ),\n    axis.text.y           = element_blank(),\n    axis.title            = element_blank(),\n    legend.position       = \"none\",\n    panel.grid.major.y    = element_blank(),\n    panel.grid.minor.y    = element_blank(),\n    plot.margin           = margin(10, 50, 10, 10),\n    plot.title            = element_markdown(\n      face  = \"bold\",\n      size  = 16,\n      hjust = 0.5\n    ),\n    plot.subtitle = element_text(\n      hjust  = 0.5,\n      margin = margin(0, 0, 20, 0)\n    ),\n    plot.caption = element_text(\n      size   = 10,\n      color  = darken(\"darkgrey\", 0.4),\n      hjust  = 0.5,\n      margin = margin(20, 0, 0, 0)\n      )\n  )\n\n\n\n\n\n\n\nStreamgraph, like other area graphs, isn’t the best for making detailed comparisons between groups. But it’s excellent for creating a broader picture of what’s going on in the data.",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-bar-charts",
    "href": "geoms.html#sec-bar-charts",
    "title": "3  Geoms",
    "section": "\n3.2 Bar charts",
    "text": "3.2 Bar charts\n\n3.2.1 Likert chart\n\n3.2.2 Mosaic chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-density-charts",
    "href": "geoms.html#sec-density-charts",
    "title": "3  Geoms",
    "section": "\n3.3 Density charts",
    "text": "3.3 Density charts\n\n3.3.1 Raincloud chart\n\n3.3.2 Ridgeline chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-geometric-shapes",
    "href": "geoms.html#sec-geometric-shapes",
    "title": "3  Geoms",
    "section": "\n3.4 Geometric shapes",
    "text": "3.4 Geometric shapes\n\n3.4.1 Arc\n\n3.4.2 B-spline curve\n\n3.4.3 Bézier curve\n\n3.4.4 Circle\n\n3.4.5 Ellipse",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-heatmaps",
    "href": "geoms.html#sec-heatmaps",
    "title": "3  Geoms",
    "section": "\n3.5 Heatmaps",
    "text": "3.5 Heatmaps\n\n3.5.1 Calendar heatmap",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-intersection-diagrams",
    "href": "geoms.html#sec-intersection-diagrams",
    "title": "3  Geoms",
    "section": "\n3.6 Intersection diagrams",
    "text": "3.6 Intersection diagrams\n\n3.6.1 UpSet diagram\n\n3.6.2 Venn diagram",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-geoms",
    "href": "geoms.html#sec-geoms",
    "title": "3  Geoms",
    "section": "\n3.7 Line charts",
    "text": "3.7 Line charts\n\n3.7.1 Bump chart\n\n3.7.2 Dumbbell and lollipop chart\n\n3.7.3 Line chart (with neon glow or shadow effects)\n\n3.7.4 Slope chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-multivariate-charts",
    "href": "geoms.html#sec-multivariate-charts",
    "title": "3  Geoms",
    "section": "\n3.8 Multivariate charts",
    "text": "3.8 Multivariate charts\n\n3.8.1 Parallel coordinates chart (improved)\n\n3.8.2 Radar chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-pie-charts",
    "href": "geoms.html#sec-pie-charts",
    "title": "3  Geoms",
    "section": "\n3.9 Pie charts",
    "text": "3.9 Pie charts\n\n3.9.1 Pie chart (improved)\n\n3.9.2 Moon chart\n\n3.9.3 Square chart (waffle chart)",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-scatter-charts",
    "href": "geoms.html#sec-scatter-charts",
    "title": "3  Geoms",
    "section": "\n3.10 Scatter charts",
    "text": "3.10 Scatter charts\n\n3.10.1 Beeswarm chart\n\n3.10.2 Point density chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-text-visualization",
    "href": "geoms.html#sec-text-visualization",
    "title": "3  Geoms",
    "section": "\n3.11 Text visualization",
    "text": "3.11 Text visualization\n\n3.11.1 Page layout visualization\n\n3.11.2 Word cloud diagram",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-tree-diagrams",
    "href": "geoms.html#sec-tree-diagrams",
    "title": "3  Geoms",
    "section": "\n3.12 Tree diagrams",
    "text": "3.12 Tree diagrams\n\n3.12.1 Dendrogram\n\n3.12.2 Treemap diagram\n\n3.12.3 Voronoi diagram\n\n\n\n\nArnold, Jeffrey B. 2024. Ggthemes: Extra Themes, Scales and Geoms for ’Ggplot2’. https://CRAN.R-project.org/package=ggthemes.\n\n\nCsárdi, Gábor, and Maëlle Salmon. 2025. Pkgsearch: Search and Query CRAN r Packages. https://CRAN.R-project.org/package=pkgsearch.\n\n\nGrantham, Neal. 2025. Ggbraid: Braid Ribbons in ’Ggplot2’. https://github.com/nsgrantham/ggbraid.\n\n\nIhaka, Ross, Paul Murrell, Kurt Hornik, Jason C. Fisher, Reto Stauffer, Claus O. Wilke, Claire D. McWhite, and Achim Zeileis. 2024. Colorspace: A Toolbox for Manipulating and Assessing Colors and Palettes. https://CRAN.R-project.org/package=colorspace.\n\n\nQiu, Yixuan, and Dave Raggett. 2024. Showtext: Using Fonts More Easily in r Graphs. https://CRAN.R-project.org/package=showtext.\n\n\nRivas-González, Iker. 2022. ggHoriPlot: Horizon Plots for ’Ggplot2’. https://CRAN.R-project.org/package=ggHoriPlot.\n\n\nSchwabish, Jonathan A. 2021. Better Data Visualizations: A Guide for Scholars, Researchers, and Wonks. 1st ed. Columbia University Press.\n\n\nSjoberg, David. 2021. Ggstream: Create Streamplots in ’Ggplot2’. https://CRAN.R-project.org/package=ggstream.\n\n\nSlowikowski, Kamil. 2024. Ggrepel: Automatically Position Non-Overlapping Text Labels with ’Ggplot2’. https://CRAN.R-project.org/package=ggrepel.\n\n\nSpinu, Vitalie, Garrett Grolemund, and Hadley Wickham. 2024. Lubridate: Make Dealing with Dates a Little Easier. https://CRAN.R-project.org/package=lubridate.\n\n\nWickham, Hadley. 2015. Ggplot2movies: Movies Data. https://CRAN.R-project.org/package=ggplot2movies.\n\n\n———. 2016. Ggplot2: Elegant Graphics for Data Analysis. 2nd ed. Springer-Verlag New York.\n\n\n———. 2023a. Forcats: Tools for Working with Categorical Variables (Factors). https://CRAN.R-project.org/package=forcats.\n\n\n———. 2023b. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\n\n\n———. 2023c. Tidyverse: Easily Install and Load the ’Tidyverse’. https://CRAN.R-project.org/package=tidyverse.\n\n\nWickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, Dewey Dunnington, and Teun van den Brand. 2025. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2.\n\n\nWilke, Claus O., and Brenton M. Wiernik. 2022. Ggtext: Improved Text Rendering Support for ’Ggplot2’. https://CRAN.R-project.org/package=ggtext.",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "themes.html#complete-themes",
    "href": "themes.html#complete-themes",
    "title": "9  Themes",
    "section": "",
    "text": "9.1.1 ggcharts\n\n9.1.2 ggeconodist\n\n9.1.3 ggnetwork\n\n9.1.4 ggpomological\n\n9.1.5 ggpubr\n\n9.1.6 ggthemes\n\n9.1.7 ggthemr\n\n9.1.8 lato\n\n9.1.9 see\n\n9.1.10 tvthemes\n\n9.1.11 urbnthemes\n\n9.1.12 xkcd",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Themes</span>"
    ]
  },
  {
    "objectID": "geoms.html#sec-line-charts",
    "href": "geoms.html#sec-line-charts",
    "title": "3  Geoms",
    "section": "\n3.7 Line charts",
    "text": "3.7 Line charts\n\n3.7.1 Bump chart\n\n3.7.2 Dumbbell and lollipop chart\n\n3.7.3 Line chart (with neon glow or shadow effects)\n\n3.7.4 Slope chart",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geoms</span>"
    ]
  },
  {
    "objectID": "interactive_tools.html#sec-shiny",
    "href": "interactive_tools.html#sec-shiny",
    "title": "16  Interactive tools",
    "section": "\n16.2 Shiny",
    "text": "16.2 Shiny\n\n16.2.1 Auto theming\n\n16.2.2 Choosing color palettes interactively\n\n16.2.2.1 colorspace\n\n16.2.3 Color picker\n\n16.2.4 Editing layers\n\n16.2.5 Editing themes\n\n16.2.6 Interactive layers\n\n16.2.7 Marginal plots\n\n16.2.8 Theme preview",
    "crumbs": [
      "Shortcuts",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Interactive tools</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-annotate-areas-with",
    "href": "annotations.html#sec-annotate-areas-with",
    "title": "5  Annotations",
    "section": "\n5.2 Annotate areas with…",
    "text": "5.2 Annotate areas with…\n\n5.2.1 Circles\n\n5.2.2 Ellipses\n\n5.2.3 Hulls\n\n5.2.4 Rectangles",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-curved-text-labeling",
    "href": "annotations.html#sec-curved-text-labeling",
    "title": "5  Annotations",
    "section": "\n5.3 Curved text labeling",
    "text": "5.3 Curved text labeling",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-direct-labeling",
    "href": "annotations.html#sec-direct-labeling",
    "title": "5  Annotations",
    "section": "\n5.4 Direct labeling",
    "text": "5.4 Direct labeling",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-fitted-model-based-annotations",
    "href": "annotations.html#sec-fitted-model-based-annotations",
    "title": "5  Annotations",
    "section": "\n5.5 Fitted-model-based annotations",
    "text": "5.5 Fitted-model-based annotations",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-highlighting-geoms",
    "href": "annotations.html#sec-highlighting-geoms",
    "title": "5  Annotations",
    "section": "\n5.6 Highlighting geoms",
    "text": "5.6 Highlighting geoms",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-highlighting-points",
    "href": "annotations.html#sec-highlighting-points",
    "title": "5  Annotations",
    "section": "\n5.7 Highlighting points",
    "text": "5.7 Highlighting points",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-inset-plots",
    "href": "annotations.html#sec-inset-plots",
    "title": "5  Annotations",
    "section": "\n5.8 Inset plots",
    "text": "5.8 Inset plots",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-inset-tables",
    "href": "annotations.html#sec-inset-tables",
    "title": "5  Annotations",
    "section": "\n5.9 Inset tables",
    "text": "5.9 Inset tables",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-repel-overlapping-labels-and-text",
    "href": "annotations.html#sec-repel-overlapping-labels-and-text",
    "title": "5  Annotations",
    "section": "\n5.10 Repel overlapping labels & text",
    "text": "5.10 Repel overlapping labels & text\n\n5.10.1 Labels\n\n5.10.2 Text",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-shadow-text",
    "href": "annotations.html#sec-shadow-text",
    "title": "5  Annotations",
    "section": "\n5.11 Shadow text",
    "text": "5.11 Shadow text",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  },
  {
    "objectID": "annotations.html#sec-significance-brackets",
    "href": "annotations.html#sec-significance-brackets",
    "title": "5  Annotations",
    "section": "\n5.12 Significance brackets",
    "text": "5.12 Significance brackets",
    "crumbs": [
      "Layers",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Annotations</span>"
    ]
  }
]